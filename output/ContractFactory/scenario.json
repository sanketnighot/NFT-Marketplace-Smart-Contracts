[
 {
  "shortname": "FA2-nft-no_totsup",
  "longname": "FA2-nft-no_totsup",
  "scenario": [
   {
    "action": "html",
    "inner": "FA2 Contract Name: FA2-nft-no_totsup",
    "line_no": "(\"./FA2.py\" 769)",
    "tag": "h1"
   },
   {
    "action": "html",
    "inner": "[[TABLEOFCONTENTS]]",
    "line_no": "(\"./FA2.py\" 770)",
    "tag": "p"
   },
   {
    "action": "html",
    "inner": "Accounts",
    "line_no": "(\"./FA2.py\" 776)",
    "tag": "h2"
   },
   {
    "action": "show",
    "compile": false,
    "expression": "((\"./FA2.py\" 777) list ((\"./FA2.py\" 772) account_of_seed \"Administrator\") ((\"./FA2.py\" 773) account_of_seed \"Alice\") ((\"./FA2.py\" 774) account_of_seed \"Robert\"))",
    "html": true,
    "line_no": "(\"./FA2.py\" 777)",
    "stripStrings": false
   },
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id ((\"./FA2.py\" 781) static_id 0) \nstorage ((\"./FA2.py\" 404) record (administrator ((\"./FA2.py\" 772) resolve ((\"./FA2.py\" 772) attr ((\"./FA2.py\" 772) account_of_seed \"Administrator\") \"address\"))) (all_tokens ((\"./FA2.py\" 335) literal (nat 0))) (ledger ((\"./FA2.py\" 405) type_annotation ((\"./FA2.py\" 405) big_map ) (bigmap (unknown 2) (record ((balance \"nat\")) None (\"./FA2.py\" 240))))) (metadata ((\"./FA2.py\" 779) big_map (((\"./FA2.py\" 781) literal (string \"\")) ((\"./FA2.py\" 779) literal (bytes \"0x68747470733a2f2f6578616d706c652e636f6d\"))))) (operators ((\"./FA2.py\" 269) type_annotation ((\"./FA2.py\" 269) big_map ) (bigmap (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"./FA2.py\" 260)) \"unit\"))) (paused ((\"./FA2.py\" 404) literal (bool False))) (token_metadata ((\"./FA2.py\" 406) type_annotation ((\"./FA2.py\" 406) big_map ) (bigmap \"nat\" (record ((token_id \"nat\") (token_info (map \"string\" \"bytes\"))) None (\"./FA2.py\" 315))))))\nstorage_type (())\nentry_points ((balance_of True None None None True None (\"./FA2.py\" 464) (((\"./FA2.py\" 466) verify ((\"./FA2.py\" 466) not ((\"./FA2.py\" 562) attr ((\"./FA2.py\" 781) data) \"paused\")) ((\"./FA2.py\" 466) literal (string \"FA2_PAUSED\"))) ((\"./FA2.py\" 467) set_type ((\"./FA2.py\" 464) params) (record ((callback (contract (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"./FA2.py\" 295)))) (Some ((\"request\") (\"balance\"))) (\"./FA2.py\" 301))))) (requests (list (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"./FA2.py\" 295))))) (Some ((\"requests\") (\"callback\"))) (\"./FA2.py\" 307))) ((\"./FA2.py\" 488) define_local \"responses\" ((\"./FA2.py\" 488) map_function ((\"./FA2.py\" 488) attr ((\"./FA2.py\" 464) params) \"requests\") ((\"./FA2.py\" 488) lambda_general None False None \"_x0\" \"\" (((\"./FA2.py\" 471) verify ((\"./FA2.py\" 471) contains ((\"./FA2.py\" 471) attr ((\"./FA2.py\" 781) data) \"token_metadata\") ((\"./FA2.py\" 470) attr ((\"./FA2.py\" 488) lambda_params \"_x0\") \"token_id\")) ((\"./FA2.py\" 471) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"./FA2.py\" 473) if_block ((\"./FA2.py\" 473) contains ((\"./FA2.py\" 473) attr ((\"./FA2.py\" 781) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 470) attr ((\"./FA2.py\" 488) lambda_params \"_x0\") \"owner\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 470) attr ((\"./FA2.py\" 488) lambda_params \"_x0\") \"token_id\") \"nat\"))) (((\"./FA2.py\" 475) result ((\"./FA2.py\" 476) record (balance ((\"./FA2.py\" 474) attr ((\"./FA2.py\" 474) get_item ((\"./FA2.py\" 473) attr ((\"./FA2.py\" 781) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 470) attr ((\"./FA2.py\" 488) lambda_params \"_x0\") \"owner\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 470) attr ((\"./FA2.py\" 488) lambda_params \"_x0\") \"token_id\") \"nat\"))) \"balance\")) (request ((\"./FA2.py\" 477) record (owner ((\"./FA2.py\" 478) type_annotation ((\"./FA2.py\" 470) attr ((\"./FA2.py\" 488) lambda_params \"_x0\") \"owner\") \"address\")) (token_id ((\"./FA2.py\" 479) type_annotation ((\"./FA2.py\" 470) attr ((\"./FA2.py\" 488) lambda_params \"_x0\") \"token_id\") \"nat\")))))))) (else_block (((\"./FA2.py\" 482) result ((\"./FA2.py\" 483) record (balance ((\"./FA2.py\" 483) literal (intOrNat 0))) (request ((\"./FA2.py\" 484) record (owner ((\"./FA2.py\" 485) type_annotation ((\"./FA2.py\" 470) attr ((\"./FA2.py\" 488) lambda_params \"_x0\") \"owner\") \"address\")) (token_id ((\"./FA2.py\" 486) type_annotation ((\"./FA2.py\" 470) attr ((\"./FA2.py\" 488) lambda_params \"_x0\") \"token_id\") \"nat\"))))))))))) True) ((\"./FA2.py\" 491) set ((\"./FA2.py\" 491) operations) ((\"./FA2.py\" 491) cons ((\"./FA2.py\" 491) transfer ((\"./FA2.py\" 491) get_local \"responses\") ((\"./FA2.py\" 491) literal (mutez 0)) ((\"./FA2.py\" 489) type_annotation ((\"./FA2.py\" 490) attr ((\"./FA2.py\" 464) params) \"callback\") (contract (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"./FA2.py\" 295)))) (Some ((\"request\") (\"balance\"))) (\"./FA2.py\" 301)))))) ((\"./FA2.py\" 491) operations))))) (mint True None None None True None (\"./FA2.py\" 581) (((\"./FA2.py\" 589) verify ((\"./FA2.py\" 590) not ((\"./FA2.py\" 349) lt ((\"./FA2.py\" 591) attr ((\"./FA2.py\" 581) params) \"token_id\") ((\"./FA2.py\" 591) attr ((\"./FA2.py\" 781) data) \"all_tokens\"))) ((\"./FA2.py\" 589) literal (string \"NFT-asset: cannot mint twice same token\"))) ((\"./FA2.py\" 595) if_block ((\"./FA2.py\" 595) contains ((\"./FA2.py\" 473) attr ((\"./FA2.py\" 781) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 594) attr ((\"./FA2.py\" 581) params) \"address\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 591) attr ((\"./FA2.py\" 581) params) \"token_id\") \"nat\"))) (((\"./FA2.py\" 596) set ((\"./FA2.py\" 596) attr ((\"./FA2.py\" 596) get_item ((\"./FA2.py\" 473) attr ((\"./FA2.py\" 781) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 594) attr ((\"./FA2.py\" 581) params) \"address\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 591) attr ((\"./FA2.py\" 581) params) \"token_id\") \"nat\"))) \"balance\") ((\"./FA2.py\" 596) add ((\"./FA2.py\" 596) attr ((\"./FA2.py\" 596) get_item ((\"./FA2.py\" 473) attr ((\"./FA2.py\" 781) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 594) attr ((\"./FA2.py\" 581) params) \"address\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 591) attr ((\"./FA2.py\" 581) params) \"token_id\") \"nat\"))) \"balance\") ((\"./FA2.py\" 596) attr ((\"./FA2.py\" 581) params) \"amount\"))))) (else_block (((\"./FA2.py\" 598) set ((\"./FA2.py\" 598) get_item ((\"./FA2.py\" 473) attr ((\"./FA2.py\" 781) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 594) attr ((\"./FA2.py\" 581) params) \"address\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 591) attr ((\"./FA2.py\" 581) params) \"token_id\") \"nat\"))) ((\"./FA2.py\" 243) record (balance ((\"./FA2.py\" 596) attr ((\"./FA2.py\" 581) params) \"amount\")))))) ((\"./FA2.py\" 599) if_block ((\"./FA2.py\" 599) not ((\"./FA2.py\" 349) lt ((\"./FA2.py\" 591) attr ((\"./FA2.py\" 581) params) \"token_id\") ((\"./FA2.py\" 591) attr ((\"./FA2.py\" 781) data) \"all_tokens\"))) (((\"./FA2.py\" 341) verify ((\"./FA2.py\" 341) eq ((\"./FA2.py\" 591) attr ((\"./FA2.py\" 781) data) \"all_tokens\") ((\"./FA2.py\" 591) attr ((\"./FA2.py\" 581) params) \"token_id\")) ((\"./FA2.py\" 341) literal (string \"Token-IDs should be consecutive\"))) ((\"./FA2.py\" 343) set ((\"./FA2.py\" 591) attr ((\"./FA2.py\" 781) data) \"all_tokens\") ((\"./FA2.py\" 343) add ((\"./FA2.py\" 591) attr ((\"./FA2.py\" 581) params) \"token_id\") ((\"./FA2.py\" 343) literal (intOrNat 1)))) ((\"./FA2.py\" 601) set ((\"./FA2.py\" 601) get_item ((\"./FA2.py\" 471) attr ((\"./FA2.py\" 781) data) \"token_metadata\") ((\"./FA2.py\" 591) attr ((\"./FA2.py\" 581) params) \"token_id\")) ((\"./FA2.py\" 601) record (token_id ((\"./FA2.py\" 591) attr ((\"./FA2.py\" 581) params) \"token_id\")) (token_info ((\"./FA2.py\" 603) attr ((\"./FA2.py\" 581) params) \"metadata\")))))))) (set_administrator True None None None True None (\"./FA2.py\" 554) (((\"./FA2.py\" 555) verify ((\"./FA2.py\" 551) eq ((\"\" -1) sender) ((\"./FA2.py\" 551) attr ((\"./FA2.py\" 781) data) \"administrator\")) ((\"./FA2.py\" 555) literal (string \"FA2_NOT_ADMIN\"))) ((\"./FA2.py\" 557) set ((\"./FA2.py\" 551) attr ((\"./FA2.py\" 781) data) \"administrator\") ((\"./FA2.py\" 554) params)))) (set_metadata True None None None True None (\"./FA2.py\" 573) (((\"./FA2.py\" 574) verify ((\"./FA2.py\" 551) eq ((\"\" -1) sender) ((\"./FA2.py\" 551) attr ((\"./FA2.py\" 781) data) \"administrator\")) ((\"./FA2.py\" 574) literal (string \"FA2_NOT_ADMIN\"))) ((\"./FA2.py\" 576) set ((\"./FA2.py\" 576) get_item ((\"./FA2.py\" 576) attr ((\"./FA2.py\" 781) data) \"metadata\") ((\"./FA2.py\" 781) attr ((\"./FA2.py\" 573) params) \"k\")) ((\"./FA2.py\" 781) attr ((\"./FA2.py\" 573) params) \"v\")))) (set_pause True None None None True None (\"./FA2.py\" 565) (((\"./FA2.py\" 566) verify ((\"./FA2.py\" 551) eq ((\"\" -1) sender) ((\"./FA2.py\" 551) attr ((\"./FA2.py\" 781) data) \"administrator\")) ((\"./FA2.py\" 566) literal (string \"FA2_NOT_ADMIN\"))) ((\"./FA2.py\" 568) set ((\"./FA2.py\" 562) attr ((\"./FA2.py\" 781) data) \"paused\") ((\"./FA2.py\" 565) params)))) (transfer True None None None True None (\"./FA2.py\" 420) (((\"./FA2.py\" 421) verify ((\"./FA2.py\" 421) not ((\"./FA2.py\" 562) attr ((\"./FA2.py\" 781) data) \"paused\")) ((\"./FA2.py\" 421) literal (string \"FA2_PAUSED\"))) ((\"./FA2.py\" 422) set_type ((\"./FA2.py\" 420) params) (list (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"./FA2.py\" 174))))) (Some ((\"from_\") (\"txs\"))) (\"./FA2.py\" 178)))) ((\"./FA2.py\" 423) for_group \"transfer\" ((\"./FA2.py\" 420) params) (((\"./FA2.py\" 425) for_group \"tx\" ((\"./FA2.py\" 425) attr ((\"./FA2.py\" 423) iter \"transfer\") \"txs\") (((\"./FA2.py\" 441) verify ((\"./FA2.py\" 435) or ((\"./FA2.py\" 430) or ((\"./FA2.py\" 551) eq ((\"\" -1) sender) ((\"./FA2.py\" 551) attr ((\"./FA2.py\" 781) data) \"administrator\")) ((\"./FA2.py\" 431) eq ((\"./FA2.py\" 424) attr ((\"./FA2.py\" 423) iter \"transfer\") \"from_\") ((\"\" -1) sender))) ((\"./FA2.py\" 288) contains ((\"./FA2.py\" 435) attr ((\"./FA2.py\" 781) data) \"operators\") ((\"./FA2.py\" 275) type_annotation ((\"./FA2.py\" 272) record (operator ((\"\" -1) sender)) (owner ((\"./FA2.py\" 424) attr ((\"./FA2.py\" 423) iter \"transfer\") \"from_\")) (token_id ((\"./FA2.py\" 438) attr ((\"./FA2.py\" 425) iter \"tx\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"./FA2.py\" 260))))) ((\"./FA2.py\" 441) literal (string \"FA2_NOT_OPERATOR\"))) ((\"./FA2.py\" 442) verify ((\"./FA2.py\" 443) contains ((\"./FA2.py\" 471) attr ((\"./FA2.py\" 781) data) \"token_metadata\") ((\"./FA2.py\" 438) attr ((\"./FA2.py\" 425) iter \"tx\") \"token_id\")) ((\"./FA2.py\" 442) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"./FA2.py\" 447) if_block ((\"./FA2.py\" 447) gt ((\"./FA2.py\" 447) attr ((\"./FA2.py\" 425) iter \"tx\") \"amount\") ((\"./FA2.py\" 447) literal (intOrNat 0))) (((\"./FA2.py\" 449) verify ((\"./FA2.py\" 450) ge ((\"./FA2.py\" 450) attr ((\"./FA2.py\" 450) get_item ((\"./FA2.py\" 473) attr ((\"./FA2.py\" 781) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 424) attr ((\"./FA2.py\" 423) iter \"transfer\") \"from_\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 438) attr ((\"./FA2.py\" 425) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"./FA2.py\" 447) attr ((\"./FA2.py\" 425) iter \"tx\") \"amount\")) ((\"./FA2.py\" 449) literal (string \"FA2_INSUFFICIENT_BALANCE\"))) ((\"./FA2.py\" 453) set ((\"./FA2.py\" 453) attr ((\"./FA2.py\" 453) get_item ((\"./FA2.py\" 473) attr ((\"./FA2.py\" 781) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 424) attr ((\"./FA2.py\" 423) iter \"transfer\") \"from_\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 438) attr ((\"./FA2.py\" 425) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"./FA2.py\" 453) open_variant ((\"./FA2.py\" 453) is_nat ((\"./FA2.py\" 454) sub ((\"./FA2.py\" 454) attr ((\"./FA2.py\" 454) get_item ((\"./FA2.py\" 473) attr ((\"./FA2.py\" 781) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 424) attr ((\"./FA2.py\" 423) iter \"transfer\") \"from_\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 438) attr ((\"./FA2.py\" 425) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"./FA2.py\" 447) attr ((\"./FA2.py\" 425) iter \"tx\") \"amount\"))) \"Some\" \"None\")) ((\"./FA2.py\" 455) if_block ((\"./FA2.py\" 455) contains ((\"./FA2.py\" 473) attr ((\"./FA2.py\" 781) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 452) attr ((\"./FA2.py\" 425) iter \"tx\") \"to_\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 438) attr ((\"./FA2.py\" 425) iter \"tx\") \"token_id\") \"nat\"))) (((\"./FA2.py\" 456) set ((\"./FA2.py\" 456) attr ((\"./FA2.py\" 456) get_item ((\"./FA2.py\" 473) attr ((\"./FA2.py\" 781) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 452) attr ((\"./FA2.py\" 425) iter \"tx\") \"to_\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 438) attr ((\"./FA2.py\" 425) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"./FA2.py\" 456) add ((\"./FA2.py\" 456) attr ((\"./FA2.py\" 456) get_item ((\"./FA2.py\" 473) attr ((\"./FA2.py\" 781) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 452) attr ((\"./FA2.py\" 425) iter \"tx\") \"to_\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 438) attr ((\"./FA2.py\" 425) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"./FA2.py\" 447) attr ((\"./FA2.py\" 425) iter \"tx\") \"amount\"))))) (else_block (((\"./FA2.py\" 458) set ((\"./FA2.py\" 458) get_item ((\"./FA2.py\" 473) attr ((\"./FA2.py\" 781) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 452) attr ((\"./FA2.py\" 425) iter \"tx\") \"to_\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 438) attr ((\"./FA2.py\" 425) iter \"tx\") \"token_id\") \"nat\"))) ((\"./FA2.py\" 243) record (balance ((\"./FA2.py\" 447) attr ((\"./FA2.py\" 425) iter \"tx\") \"amount\")))))))) (else_block ()))))))) (update_operators True None None None True None (\"./FA2.py\" 507) (((\"./FA2.py\" 508) set_type ((\"./FA2.py\" 507) params) (list (variant ((add_operator (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"./FA2.py\" 202))) (remove_operator (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"./FA2.py\" 202)))) None (\"./FA2.py\" 509)))) ((\"./FA2.py\" 515) for_group \"update\" ((\"./FA2.py\" 507) params) (((\"./FA2.py\" 516) match_cases ((\"./FA2.py\" 515) iter \"update\") \"match_FA2_516\" (((\"./FA2.py\" 517) match ((\"./FA2.py\" 516) cases_arg \"match_FA2_516\") \"add_operator\" \"add_operator\" (((\"./FA2.py\" 518) verify ((\"./FA2.py\" 519) or ((\"./FA2.py\" 519) eq ((\"./FA2.py\" 519) attr ((\"./FA2.py\" 517) variant_arg \"add_operator\") \"owner\") ((\"\" -1) sender)) ((\"./FA2.py\" 551) eq ((\"\" -1) sender) ((\"./FA2.py\" 551) attr ((\"./FA2.py\" 781) data) \"administrator\"))) ((\"./FA2.py\" 518) literal (string \"FA2_NOT_ADMIN_OR_OPERATOR\"))) ((\"./FA2.py\" 282) set ((\"./FA2.py\" 282) get_item ((\"./FA2.py\" 435) attr ((\"./FA2.py\" 781) data) \"operators\") ((\"./FA2.py\" 275) type_annotation ((\"./FA2.py\" 272) record (operator ((\"./FA2.py\" 525) attr ((\"./FA2.py\" 517) variant_arg \"add_operator\") \"operator\")) (owner ((\"./FA2.py\" 519) attr ((\"./FA2.py\" 517) variant_arg \"add_operator\") \"owner\")) (token_id ((\"./FA2.py\" 526) attr ((\"./FA2.py\" 517) variant_arg \"add_operator\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"./FA2.py\" 260)))) ((\"\" -1) literal (unit))))) ((\"./FA2.py\" 527) match ((\"./FA2.py\" 516) cases_arg \"match_FA2_516\") \"remove_operator\" \"remove_operator\" (((\"./FA2.py\" 528) verify ((\"./FA2.py\" 529) or ((\"./FA2.py\" 529) eq ((\"./FA2.py\" 529) attr ((\"./FA2.py\" 527) variant_arg \"remove_operator\") \"owner\") ((\"\" -1) sender)) ((\"./FA2.py\" 551) eq ((\"\" -1) sender) ((\"./FA2.py\" 551) attr ((\"./FA2.py\" 781) data) \"administrator\"))) ((\"./FA2.py\" 528) literal (string \"FA2_NOT_ADMIN_OR_OPERATOR\"))) ((\"./FA2.py\" 285) del_item ((\"./FA2.py\" 435) attr ((\"./FA2.py\" 781) data) \"operators\") ((\"./FA2.py\" 275) type_annotation ((\"./FA2.py\" 272) record (operator ((\"./FA2.py\" 535) attr ((\"./FA2.py\" 527) variant_arg \"remove_operator\") \"operator\")) (owner ((\"./FA2.py\" 529) attr ((\"./FA2.py\" 527) variant_arg \"remove_operator\") \"owner\")) (token_id ((\"./FA2.py\" 536) attr ((\"./FA2.py\" 527) variant_arg \"remove_operator\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"./FA2.py\" 260)))))))))))))\nflags ((initial-cast) (exceptions default-line))\nprivates ()\nviews ((offchain all_tokens False (\"./FA2.py\" 650) True \"\\n            This view is specified (but optional) in the standard.\\n\\n            This contract is built with assume_consecutive_token_ids =\\n            True, so we return a list constructed from the number of tokens.\\n            \" (((\"./FA2.py\" 652) result ((\"./FA2.py\" 652) range ((\"./FA2.py\" 652) literal (intOrNat 0)) ((\"./FA2.py\" 652) attr ((\"./FA2.py\" 781) data) \"all_tokens\") ((\"./FA2.py\" 652) literal (intOrNat 1)))))) (offchain count_tokens False (\"./FA2.py\" 638) True \"Get how many tokens are in this FA2 contract.\\n        \" (((\"./FA2.py\" 641) result ((\"./FA2.py\" 641) attr ((\"./FA2.py\" 781) data) \"all_tokens\")))) (offchain does_token_exist True (\"./FA2.py\" 644) True \"Ask whether a token ID is exists.\" (((\"./FA2.py\" 646) set_type ((\"./FA2.py\" 644) params) \"nat\") ((\"./FA2.py\" 647) result ((\"./FA2.py\" 647) contains ((\"./FA2.py\" 647) attr ((\"./FA2.py\" 781) data) \"token_metadata\") ((\"./FA2.py\" 644) params))))) (offchain get_balance True (\"./FA2.py\" 494) True \"This is the `get_balance` view defined in TZIP-12.\" (((\"./FA2.py\" 496) set_type ((\"./FA2.py\" 494) params) (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"./FA2.py\" 500))) ((\"./FA2.py\" 502) verify ((\"./FA2.py\" 502) contains ((\"./FA2.py\" 502) attr ((\"./FA2.py\" 781) data) \"token_metadata\") ((\"./FA2.py\" 501) attr ((\"./FA2.py\" 494) params) \"token_id\")) ((\"./FA2.py\" 502) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"./FA2.py\" 504) result ((\"./FA2.py\" 504) attr ((\"./FA2.py\" 504) get_item ((\"./FA2.py\" 504) attr ((\"./FA2.py\" 781) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 501) attr ((\"./FA2.py\" 494) params) \"owner\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 501) attr ((\"./FA2.py\" 494) params) \"token_id\") \"nat\"))) \"balance\")))) (offchain is_operator True (\"./FA2.py\" 665) True \"\" (((\"./FA2.py\" 666) set_type ((\"./FA2.py\" 665) params) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"./FA2.py\" 669))) ((\"./FA2.py\" 671) result ((\"./FA2.py\" 288) contains ((\"./FA2.py\" 672) attr ((\"./FA2.py\" 781) data) \"operators\") ((\"./FA2.py\" 275) type_annotation ((\"./FA2.py\" 272) record (operator ((\"./FA2.py\" 674) attr ((\"./FA2.py\" 665) params) \"operator\")) (owner ((\"./FA2.py\" 673) attr ((\"./FA2.py\" 665) params) \"owner\")) (token_id ((\"./FA2.py\" 675) attr ((\"./FA2.py\" 665) params) \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"./FA2.py\" 260))))))) (offchain token_metadata True (\"./FA2.py\" 622) True \"Get Token Metadata\" (((\"./FA2.py\" 619) set_type ((\"./FA2.py\" 622) params) \"nat\") ((\"./FA2.py\" 620) result ((\"./FA2.py\" 620) get_item ((\"./FA2.py\" 620) attr ((\"./FA2.py\" 781) data) \"token_metadata\") ((\"./FA2.py\" 622) params))))) (offchain total_supply True (\"./FA2.py\" 657) True \"\" (((\"./FA2.py\" 661) set_type ((\"./FA2.py\" 657) params) \"nat\") ((\"./FA2.py\" 662) result ((\"./FA2.py\" 662) literal (string \"total-supply not supported\"))))))\nentry_points_layout ()\ninitial_metadata ((metadata_base (meta_map (\"./FA2.py\" 725) (elem ((\"./FA2.py\" 725) literal (string \"version\")) (meta_expr ((\"./FA2.py\" 725) literal (string \"FA2-nft-no_totsup\")))) (elem ((\"./FA2.py\" 725) literal (string \"description\")) (meta_expr ((\"./FA2.py\" 725) literal (string \"This is a didactic reference implementation of FA2, a.k.a. TZIP-012, using SmartPy.\n\nThis particular contract uses the configuration named: FA2-nft-no_totsup.\")))) (elem ((\"./FA2.py\" 725) literal (string \"interfaces\")) (meta_list (\"./FA2.py\" 725) (meta_expr ((\"./FA2.py\" 725) literal (string \"TZIP-012\"))) (meta_expr ((\"./FA2.py\" 725) literal (string \"TZIP-016\"))))) (elem ((\"./FA2.py\" 725) literal (string \"authors\")) (meta_list (\"./FA2.py\" 725) (meta_expr ((\"./FA2.py\" 725) literal (string \"Seb Mondet <https://seb.mondet.org>\"))))) (elem ((\"./FA2.py\" 725) literal (string \"homepage\")) (meta_expr ((\"./FA2.py\" 725) literal (string \"https://gitlab.com/smondet/fa2-smartpy\")))) (elem ((\"./FA2.py\" 725) literal (string \"views\")) (meta_list (\"./FA2.py\" 725) (meta_view \"get_balance\" (\"./FA2.py\" 494)) (meta_view \"does_token_exist\" (\"./FA2.py\" 644)) (meta_view \"count_tokens\" (\"./FA2.py\" 638)) (meta_view \"all_tokens\" (\"./FA2.py\" 650)) (meta_view \"is_operator\" (\"./FA2.py\" 665)) (meta_view \"token_metadata\" (\"./FA2.py\" 622)))) (elem ((\"./FA2.py\" 725) literal (string \"source\")) (meta_map (\"./FA2.py\" 725) (elem ((\"./FA2.py\" 725) literal (string \"tools\")) (meta_list (\"./FA2.py\" 725) (meta_expr ((\"./FA2.py\" 725) literal (string \"SmartPy\"))))) (elem ((\"./FA2.py\" 725) literal (string \"location\")) (meta_expr ((\"./FA2.py\" 725) literal (string \"https://gitlab.com/smondet/fa2-smartpy.git\")))))) (elem ((\"./FA2.py\" 725) literal (string \"permissions\")) (meta_map (\"./FA2.py\" 725) (elem ((\"./FA2.py\" 725) literal (string \"operator\")) (meta_expr ((\"./FA2.py\" 725) literal (string \"owner-or-operator-transfer\")))) (elem ((\"./FA2.py\" 725) literal (string \"receiver\")) (meta_expr ((\"./FA2.py\" 725) literal (string \"owner-no-hook\")))) (elem ((\"./FA2.py\" 725) literal (string \"sender\")) (meta_expr ((\"./FA2.py\" 725) literal (string \"owner-no-hook\")))))) (elem ((\"./FA2.py\" 725) literal (string \"fa2-smartpy\")) (meta_map (\"./FA2.py\" 725) (elem ((\"./FA2.py\" 725) literal (string \"configuration\")) (meta_map (\"./FA2.py\" 725) (elem ((\"./FA2.py\" 725) literal (string \"add_mutez_transfer\")) (meta_expr ((\"./FA2.py\" 725) literal (bool False)))) (elem ((\"./FA2.py\" 725) literal (string \"allow_self_transfer\")) (meta_expr ((\"./FA2.py\" 725) literal (bool False)))) (elem ((\"./FA2.py\" 725) literal (string \"assume_consecutive_token_ids\")) (meta_expr ((\"./FA2.py\" 725) literal (bool True)))) (elem ((\"./FA2.py\" 725) literal (string \"force_layouts\")) (meta_expr ((\"./FA2.py\" 725) literal (bool True)))) (elem ((\"./FA2.py\" 725) literal (string \"lazy_entry_points\")) (meta_expr ((\"./FA2.py\" 725) literal (bool False)))) (elem ((\"./FA2.py\" 725) literal (string \"name\")) (meta_expr ((\"./FA2.py\" 725) literal (string \"FA2-nft-no_totsup\")))) (elem ((\"./FA2.py\" 725) literal (string \"non_fungible\")) (meta_expr ((\"./FA2.py\" 725) literal (bool True)))) (elem ((\"./FA2.py\" 725) literal (string \"readable\")) (meta_expr ((\"./FA2.py\" 725) literal (bool True)))) (elem ((\"./FA2.py\" 725) literal (string \"single_asset\")) (meta_expr ((\"./FA2.py\" 725) literal (bool False)))) (elem ((\"./FA2.py\" 725) literal (string \"store_total_supply\")) (meta_expr ((\"./FA2.py\" 725) literal (bool False)))) (elem ((\"./FA2.py\" 725) literal (string \"support_operator\")) (meta_expr ((\"./FA2.py\" 725) literal (bool True)))) (elem ((\"./FA2.py\" 725) literal (string \"use_token_metadata_offchain_view\")) (meta_expr ((\"./FA2.py\" 725) literal (bool True)))))))))))\nbalance ())",
    "id": "((\"./FA2.py\" 781) static_id 0)",
    "line_no": "(\"./FA2.py\" 781)",
    "show": true
   },
   {
    "action": "html",
    "inner": "Initial Minting",
    "line_no": "(\"./FA2.py\" 783)",
    "tag": "h2"
   },
   {
    "action": "html",
    "inner": "The administrator mints 100 token-0's to Alice.",
    "line_no": "(\"./FA2.py\" 784)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"./FA2.py\" 781) static_id 0)",
    "line_no": "(\"./FA2.py\" 789)",
    "message": "mint",
    "params": "((\"./FA2.py\" 789) record (address ((\"./FA2.py\" 773) resolve ((\"./FA2.py\" 773) attr ((\"./FA2.py\" 773) account_of_seed \"Alice\") \"address\"))) (amount ((\"./FA2.py\" 789) literal (intOrNat 50))) (metadata ((\"./FA2.py\" 791) map (((\"./FA2.py\" 789) literal (string \"\")) ((\"./FA2.py\" 791) literal (bytes \"0x68747470733a2f2f697066732e696f2f697066732f626166797265696173376b7a3272796b7475333461667177683536706c746d333275787365636178736f6f746b6c776c7371757735676e337074712f6d657461646174612e6a736f6e2f\"))))) (token_id ((\"./FA2.py\" 789) literal (intOrNat 0))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "message",
    "id": "((\"./FA2.py\" 781) static_id 0)",
    "line_no": "(\"./FA2.py\" 795)",
    "message": "mint",
    "params": "((\"./FA2.py\" 795) record (address ((\"./FA2.py\" 773) resolve ((\"./FA2.py\" 773) attr ((\"./FA2.py\" 773) account_of_seed \"Alice\") \"address\"))) (amount ((\"./FA2.py\" 795) literal (intOrNat 50))) (metadata ((\"./FA2.py\" 627) map (((\"./FA2.py\" 795) literal (string \"decimals\")) ((\"./FA2.py\" 629) literal (bytes \"0x32\"))) (((\"./FA2.py\" 795) literal (string \"name\")) ((\"./FA2.py\" 630) literal (bytes \"0x54686520546f6b656e205a65726f\"))) (((\"./FA2.py\" 795) literal (string \"symbol\")) ((\"./FA2.py\" 631) literal (bytes \"0x544b30\"))))) (token_id ((\"./FA2.py\" 795) literal (intOrNat 1))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Transfers Alice -> Bob",
    "line_no": "(\"./FA2.py\" 799)",
    "tag": "h2"
   },
   {
    "action": "message",
    "id": "((\"./FA2.py\" 781) static_id 0)",
    "line_no": "(\"./FA2.py\" 800)",
    "message": "transfer",
    "params": "((\"./FA2.py\" 800) list ((\"./FA2.py\" 187) type_annotation ((\"./FA2.py\" 186) record (from_ ((\"./FA2.py\" 773) resolve ((\"./FA2.py\" 773) attr ((\"./FA2.py\" 773) account_of_seed \"Alice\") \"address\"))) (txs ((\"./FA2.py\" 186) list ((\"./FA2.py\" 804) record (amount ((\"./FA2.py\" 804) literal (intOrNat 10))) (to_ ((\"./FA2.py\" 774) resolve ((\"./FA2.py\" 774) attr ((\"./FA2.py\" 774) account_of_seed \"Robert\") \"address\"))) (token_id ((\"./FA2.py\" 804) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"./FA2.py\" 174))))) (Some ((\"from_\") (\"txs\"))) (\"./FA2.py\" 178))))",
    "sender": "seed:Alice"
   },
   {
    "action": "verify",
    "condition": "((\"./FA2.py\" 810) eq ((\"./FA2.py\" 810) attr ((\"./FA2.py\" 810) get_item ((\"./FA2.py\" 810) attr ((\"./FA2.py\" 800) contract_data ((\"./FA2.py\" 781) static_id 0)) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 773) resolve ((\"./FA2.py\" 773) attr ((\"./FA2.py\" 773) account_of_seed \"Alice\") \"address\")) \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 223) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"./FA2.py\" 810) literal (intOrNat 40)))",
    "line_no": "(\"./FA2.py\" 809)"
   },
   {
    "action": "verify",
    "condition": "((\"./FA2.py\" 812) eq ((\"./FA2.py\" 812) attr ((\"./FA2.py\" 812) get_item ((\"./FA2.py\" 810) attr ((\"./FA2.py\" 800) contract_data ((\"./FA2.py\" 781) static_id 0)) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 774) resolve ((\"./FA2.py\" 774) attr ((\"./FA2.py\" 774) account_of_seed \"Robert\") \"address\")) \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 223) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"./FA2.py\" 812) literal (intOrNat 10)))",
    "line_no": "(\"./FA2.py\" 811)"
   },
   {
    "action": "message",
    "id": "((\"./FA2.py\" 781) static_id 0)",
    "line_no": "(\"./FA2.py\" 813)",
    "message": "transfer",
    "params": "((\"./FA2.py\" 813) list ((\"./FA2.py\" 187) type_annotation ((\"./FA2.py\" 186) record (from_ ((\"./FA2.py\" 773) resolve ((\"./FA2.py\" 773) attr ((\"./FA2.py\" 773) account_of_seed \"Alice\") \"address\"))) (txs ((\"./FA2.py\" 186) list ((\"./FA2.py\" 817) record (amount ((\"./FA2.py\" 817) literal (intOrNat 10))) (to_ ((\"./FA2.py\" 774) resolve ((\"./FA2.py\" 774) attr ((\"./FA2.py\" 774) account_of_seed \"Robert\") \"address\"))) (token_id ((\"./FA2.py\" 817) literal (intOrNat 0)))) ((\"./FA2.py\" 820) record (amount ((\"./FA2.py\" 820) literal (intOrNat 11))) (to_ ((\"./FA2.py\" 774) resolve ((\"./FA2.py\" 774) attr ((\"./FA2.py\" 774) account_of_seed \"Robert\") \"address\"))) (token_id ((\"./FA2.py\" 820) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"./FA2.py\" 174))))) (Some ((\"from_\") (\"txs\"))) (\"./FA2.py\" 178))))",
    "sender": "seed:Alice"
   },
   {
    "action": "verify",
    "condition": "((\"./FA2.py\" 826) eq ((\"./FA2.py\" 827) attr ((\"./FA2.py\" 826) get_item ((\"./FA2.py\" 826) attr ((\"./FA2.py\" 813) contract_data ((\"./FA2.py\" 781) static_id 0)) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 773) resolve ((\"./FA2.py\" 773) attr ((\"./FA2.py\" 773) account_of_seed \"Alice\") \"address\")) \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 223) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"./FA2.py\" 826) literal (intOrNat 19)))",
    "line_no": "(\"./FA2.py\" 825)"
   },
   {
    "action": "verify",
    "condition": "((\"./FA2.py\" 830) eq ((\"./FA2.py\" 830) attr ((\"./FA2.py\" 830) get_item ((\"./FA2.py\" 826) attr ((\"./FA2.py\" 813) contract_data ((\"./FA2.py\" 781) static_id 0)) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 774) resolve ((\"./FA2.py\" 774) attr ((\"./FA2.py\" 774) account_of_seed \"Robert\") \"address\")) \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 223) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"./FA2.py\" 830) literal (intOrNat 31)))",
    "line_no": "(\"./FA2.py\" 829)"
   },
   {
    "action": "html",
    "inner": "More Token Types",
    "line_no": "(\"./FA2.py\" 834)",
    "tag": "h2"
   },
   {
    "action": "message",
    "id": "((\"./FA2.py\" 781) static_id 0)",
    "line_no": "(\"./FA2.py\" 839)",
    "message": "mint",
    "params": "((\"./FA2.py\" 839) record (address ((\"./FA2.py\" 774) resolve ((\"./FA2.py\" 774) attr ((\"./FA2.py\" 774) account_of_seed \"Robert\") \"address\"))) (amount ((\"./FA2.py\" 839) literal (intOrNat 100))) (metadata ((\"./FA2.py\" 627) map (((\"./FA2.py\" 839) literal (string \"decimals\")) ((\"./FA2.py\" 629) literal (bytes \"0x30\"))) (((\"./FA2.py\" 839) literal (string \"name\")) ((\"./FA2.py\" 630) literal (bytes \"0x546865205365636f6e6420546f6b656e\"))) (((\"./FA2.py\" 839) literal (string \"symbol\")) ((\"./FA2.py\" 631) literal (bytes \"0x544b31\"))))) (token_id ((\"./FA2.py\" 839) literal (intOrNat 2))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "message",
    "id": "((\"./FA2.py\" 781) static_id 0)",
    "line_no": "(\"./FA2.py\" 847)",
    "message": "mint",
    "params": "((\"./FA2.py\" 847) record (address ((\"./FA2.py\" 774) resolve ((\"./FA2.py\" 774) attr ((\"./FA2.py\" 774) account_of_seed \"Robert\") \"address\"))) (amount ((\"./FA2.py\" 847) literal (intOrNat 200))) (metadata ((\"./FA2.py\" 627) map (((\"./FA2.py\" 847) literal (string \"decimals\")) ((\"./FA2.py\" 629) literal (bytes \"0x30\"))) (((\"./FA2.py\" 847) literal (string \"name\")) ((\"./FA2.py\" 630) literal (bytes \"0x54686520546f6b656e204e756d626572205468726565\"))) (((\"./FA2.py\" 847) literal (string \"symbol\")) ((\"./FA2.py\" 631) literal (bytes \"0x544b32\"))))) (token_id ((\"./FA2.py\" 847) literal (intOrNat 3))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Other Basic Permission Tests",
    "line_no": "(\"./FA2.py\" 869)",
    "tag": "h2"
   },
   {
    "action": "html",
    "inner": "Bob cannot transfer Alice's tokens.",
    "line_no": "(\"./FA2.py\" 870)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"./FA2.py\" 781) static_id 0)",
    "line_no": "(\"./FA2.py\" 871)",
    "message": "transfer",
    "params": "((\"./FA2.py\" 871) list ((\"./FA2.py\" 187) type_annotation ((\"./FA2.py\" 186) record (from_ ((\"./FA2.py\" 773) resolve ((\"./FA2.py\" 773) attr ((\"./FA2.py\" 773) account_of_seed \"Alice\") \"address\"))) (txs ((\"./FA2.py\" 186) list ((\"./FA2.py\" 875) record (amount ((\"./FA2.py\" 875) literal (intOrNat 10))) (to_ ((\"./FA2.py\" 774) resolve ((\"./FA2.py\" 774) attr ((\"./FA2.py\" 774) account_of_seed \"Robert\") \"address\"))) (token_id ((\"./FA2.py\" 875) literal (intOrNat 0)))) ((\"./FA2.py\" 878) record (amount ((\"./FA2.py\" 878) literal (intOrNat 1))) (to_ ((\"./FA2.py\" 774) resolve ((\"./FA2.py\" 774) attr ((\"./FA2.py\" 774) account_of_seed \"Robert\") \"address\"))) (token_id ((\"./FA2.py\" 878) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"./FA2.py\" 174))))) (Some ((\"from_\") (\"txs\"))) (\"./FA2.py\" 178))))",
    "sender": "seed:Robert",
    "valid": "((\"./FA2.py\" 871) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Admin can transfer anything.",
    "line_no": "(\"./FA2.py\" 882)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"./FA2.py\" 781) static_id 0)",
    "line_no": "(\"./FA2.py\" 883)",
    "message": "transfer",
    "params": "((\"./FA2.py\" 883) list ((\"./FA2.py\" 187) type_annotation ((\"./FA2.py\" 186) record (from_ ((\"./FA2.py\" 773) resolve ((\"./FA2.py\" 773) attr ((\"./FA2.py\" 773) account_of_seed \"Alice\") \"address\"))) (txs ((\"./FA2.py\" 186) list ((\"./FA2.py\" 887) record (amount ((\"./FA2.py\" 887) literal (intOrNat 10))) (to_ ((\"./FA2.py\" 774) resolve ((\"./FA2.py\" 774) attr ((\"./FA2.py\" 774) account_of_seed \"Robert\") \"address\"))) (token_id ((\"./FA2.py\" 887) literal (intOrNat 0)))) ((\"./FA2.py\" 890) record (amount ((\"./FA2.py\" 890) literal (intOrNat 10))) (to_ ((\"./FA2.py\" 774) resolve ((\"./FA2.py\" 774) attr ((\"./FA2.py\" 774) account_of_seed \"Robert\") \"address\"))) (token_id ((\"./FA2.py\" 890) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"./FA2.py\" 174))))) (Some ((\"from_\") (\"txs\"))) (\"./FA2.py\" 178))) ((\"./FA2.py\" 187) type_annotation ((\"./FA2.py\" 186) record (from_ ((\"./FA2.py\" 774) resolve ((\"./FA2.py\" 774) attr ((\"./FA2.py\" 774) account_of_seed \"Robert\") \"address\"))) (txs ((\"./FA2.py\" 186) list ((\"./FA2.py\" 895) record (amount ((\"./FA2.py\" 895) literal (intOrNat 11))) (to_ ((\"./FA2.py\" 773) resolve ((\"./FA2.py\" 773) attr ((\"./FA2.py\" 773) account_of_seed \"Alice\") \"address\"))) (token_id ((\"./FA2.py\" 895) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"./FA2.py\" 174))))) (Some ((\"from_\") (\"txs\"))) (\"./FA2.py\" 178))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Even Admin cannot transfer too much.",
    "line_no": "(\"./FA2.py\" 899)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"./FA2.py\" 781) static_id 0)",
    "line_no": "(\"./FA2.py\" 900)",
    "message": "transfer",
    "params": "((\"./FA2.py\" 900) list ((\"./FA2.py\" 187) type_annotation ((\"./FA2.py\" 186) record (from_ ((\"./FA2.py\" 773) resolve ((\"./FA2.py\" 773) attr ((\"./FA2.py\" 773) account_of_seed \"Alice\") \"address\"))) (txs ((\"./FA2.py\" 186) list ((\"./FA2.py\" 904) record (amount ((\"./FA2.py\" 904) literal (intOrNat 1000))) (to_ ((\"./FA2.py\" 774) resolve ((\"./FA2.py\" 774) attr ((\"./FA2.py\" 774) account_of_seed \"Robert\") \"address\"))) (token_id ((\"./FA2.py\" 904) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"./FA2.py\" 174))))) (Some ((\"from_\") (\"txs\"))) (\"./FA2.py\" 178))))",
    "sender": "seed:Administrator",
    "valid": "((\"./FA2.py\" 900) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Consumer Contract for Callback Calls.",
    "line_no": "(\"./FA2.py\" 908)",
    "tag": "h3"
   },
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id ((\"./FA2.py\" 910) static_id 1) \nstorage ((\"./FA2.py\" 743) record (last_sum ((\"./FA2.py\" 743) literal (intOrNat 0))) (operator_support ((\"./FA2.py\" 743) literal (bool False))))\nstorage_type (())\nentry_points ((receive_balances True None None None True None (\"./FA2.py\" 752) (((\"./FA2.py\" 753) set_type ((\"./FA2.py\" 752) params) (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"./FA2.py\" 295)))) (Some ((\"request\") (\"balance\"))) (\"./FA2.py\" 301)))) ((\"./FA2.py\" 754) set ((\"./FA2.py\" 754) attr ((\"./FA2.py\" 910) data) \"last_sum\") ((\"./FA2.py\" 754) literal (intOrNat 0))) ((\"./FA2.py\" 755) for_group \"resp\" ((\"./FA2.py\" 752) params) (((\"./FA2.py\" 756) set ((\"./FA2.py\" 754) attr ((\"./FA2.py\" 910) data) \"last_sum\") ((\"./FA2.py\" 756) add ((\"./FA2.py\" 754) attr ((\"./FA2.py\" 910) data) \"last_sum\") ((\"./FA2.py\" 756) attr ((\"./FA2.py\" 755) iter \"resp\") \"balance\"))))))) (reinit True None None None False None (\"./FA2.py\" 747) (((\"./FA2.py\" 748) set ((\"./FA2.py\" 754) attr ((\"./FA2.py\" 910) data) \"last_sum\") ((\"./FA2.py\" 748) literal (intOrNat 0))))))\nflags ()\nprivates ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())",
    "id": "((\"./FA2.py\" 910) static_id 1)",
    "line_no": "(\"./FA2.py\" 910)",
    "show": true
   },
   {
    "action": "html",
    "inner": "Consumer virtual address: ((\"./FA2.py\" 910) contract_address ((\"./FA2.py\" 910) static_id 1) \"\")",
    "line_no": "(\"./FA2.py\" 911)",
    "tag": "p"
   },
   {
    "action": "html",
    "inner": "Balance-of.",
    "line_no": "(\"./FA2.py\" 913)",
    "tag": "h2"
   },
   {
    "action": "message",
    "id": "((\"./FA2.py\" 781) static_id 0)",
    "line_no": "(\"./FA2.py\" 922)",
    "message": "balance_of",
    "params": "((\"./FA2.py\" 916) record (callback ((\"./FA2.py\" 920) open_variant ((\"./FA2.py\" 917) contract \"receive_balances\" (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"./FA2.py\" 295)))) (Some ((\"request\") (\"balance\"))) (\"./FA2.py\" 301))) ((\"./FA2.py\" 910) contract_address ((\"./FA2.py\" 910) static_id 1) \"\")) \"Some\" \"None\")) (requests ((\"./FA2.py\" 916) list ((\"./FA2.py\" 923) record (owner ((\"./FA2.py\" 773) resolve ((\"./FA2.py\" 773) attr ((\"./FA2.py\" 773) account_of_seed \"Alice\") \"address\"))) (token_id ((\"./FA2.py\" 923) literal (intOrNat 0)))) ((\"./FA2.py\" 924) record (owner ((\"./FA2.py\" 773) resolve ((\"./FA2.py\" 773) attr ((\"./FA2.py\" 773) account_of_seed \"Alice\") \"address\"))) (token_id ((\"./FA2.py\" 924) literal (intOrNat 1)))) ((\"./FA2.py\" 925) record (owner ((\"./FA2.py\" 773) resolve ((\"./FA2.py\" 773) attr ((\"./FA2.py\" 773) account_of_seed \"Alice\") \"address\"))) (token_id ((\"./FA2.py\" 925) literal (intOrNat 2)))))))"
   },
   {
    "action": "html",
    "inner": "Operators",
    "line_no": "(\"./FA2.py\" 928)",
    "tag": "h2"
   },
   {
    "action": "html",
    "inner": "This version was compiled with operator support.",
    "line_no": "(\"./FA2.py\" 934)",
    "tag": "p"
   },
   {
    "action": "html",
    "inner": "Calling 0 updates should work:",
    "line_no": "(\"./FA2.py\" 935)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"./FA2.py\" 781) static_id 0)",
    "line_no": "(\"./FA2.py\" 936)",
    "message": "update_operators",
    "params": "((\"./FA2.py\" 936) list )"
   },
   {
    "action": "html",
    "inner": "Operator Accounts",
    "line_no": "(\"./FA2.py\" 937)",
    "tag": "h3"
   },
   {
    "action": "show",
    "compile": false,
    "expression": "((\"./FA2.py\" 941) list ((\"./FA2.py\" 938) account_of_seed \"Operator0\") ((\"./FA2.py\" 939) account_of_seed \"Operator1\") ((\"./FA2.py\" 940) account_of_seed \"Operator2\"))",
    "html": true,
    "line_no": "(\"./FA2.py\" 941)",
    "stripStrings": false
   },
   {
    "action": "html",
    "inner": "Admin can change Alice's operator.",
    "line_no": "(\"./FA2.py\" 942)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"./FA2.py\" 781) static_id 0)",
    "line_no": "(\"./FA2.py\" 943)",
    "message": "update_operators",
    "params": "((\"./FA2.py\" 943) list ((\"./FA2.py\" 944) variant \"add_operator\" ((\"./FA2.py\" 209) type_annotation ((\"./FA2.py\" 206) record (operator ((\"./FA2.py\" 939) resolve ((\"./FA2.py\" 939) attr ((\"./FA2.py\" 939) account_of_seed \"Operator1\") \"address\"))) (owner ((\"./FA2.py\" 773) resolve ((\"./FA2.py\" 773) attr ((\"./FA2.py\" 773) account_of_seed \"Alice\") \"address\"))) (token_id ((\"./FA2.py\" 206) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"./FA2.py\" 202)))) ((\"./FA2.py\" 948) variant \"add_operator\" ((\"./FA2.py\" 209) type_annotation ((\"./FA2.py\" 206) record (operator ((\"./FA2.py\" 939) resolve ((\"./FA2.py\" 939) attr ((\"./FA2.py\" 939) account_of_seed \"Operator1\") \"address\"))) (owner ((\"./FA2.py\" 773) resolve ((\"./FA2.py\" 773) attr ((\"./FA2.py\" 773) account_of_seed \"Alice\") \"address\"))) (token_id ((\"./FA2.py\" 206) literal (intOrNat 2)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"./FA2.py\" 202)))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Operator1 cannot transfer Bob's tokens",
    "line_no": "(\"./FA2.py\" 965)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"./FA2.py\" 781) static_id 0)",
    "line_no": "(\"./FA2.py\" 966)",
    "message": "transfer",
    "params": "((\"./FA2.py\" 966) list ((\"./FA2.py\" 187) type_annotation ((\"./FA2.py\" 186) record (from_ ((\"./FA2.py\" 774) resolve ((\"./FA2.py\" 774) attr ((\"./FA2.py\" 774) account_of_seed \"Robert\") \"address\"))) (txs ((\"./FA2.py\" 186) list ((\"./FA2.py\" 970) record (amount ((\"./FA2.py\" 970) literal (intOrNat 2))) (to_ ((\"./FA2.py\" 939) resolve ((\"./FA2.py\" 939) attr ((\"./FA2.py\" 939) account_of_seed \"Operator1\") \"address\"))) (token_id ((\"./FA2.py\" 970) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"./FA2.py\" 174))))) (Some ((\"from_\") (\"txs\"))) (\"./FA2.py\" 178))))",
    "sender": "seed:Operator1",
    "valid": "((\"./FA2.py\" 966) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Operator2 cannot transfer Alice's tokens",
    "line_no": "(\"./FA2.py\" 974)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"./FA2.py\" 781) static_id 0)",
    "line_no": "(\"./FA2.py\" 975)",
    "message": "transfer",
    "params": "((\"./FA2.py\" 975) list ((\"./FA2.py\" 187) type_annotation ((\"./FA2.py\" 186) record (from_ ((\"./FA2.py\" 773) resolve ((\"./FA2.py\" 773) attr ((\"./FA2.py\" 773) account_of_seed \"Alice\") \"address\"))) (txs ((\"./FA2.py\" 186) list ((\"./FA2.py\" 979) record (amount ((\"./FA2.py\" 979) literal (intOrNat 2))) (to_ ((\"./FA2.py\" 774) resolve ((\"./FA2.py\" 774) attr ((\"./FA2.py\" 774) account_of_seed \"Robert\") \"address\"))) (token_id ((\"./FA2.py\" 979) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"./FA2.py\" 174))))) (Some ((\"from_\") (\"txs\"))) (\"./FA2.py\" 178))))",
    "sender": "seed:Operator2",
    "valid": "((\"./FA2.py\" 975) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Alice can remove their operator",
    "line_no": "(\"./FA2.py\" 983)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"./FA2.py\" 781) static_id 0)",
    "line_no": "(\"./FA2.py\" 984)",
    "message": "update_operators",
    "params": "((\"./FA2.py\" 984) list ((\"./FA2.py\" 985) variant \"remove_operator\" ((\"./FA2.py\" 209) type_annotation ((\"./FA2.py\" 206) record (operator ((\"./FA2.py\" 939) resolve ((\"./FA2.py\" 939) attr ((\"./FA2.py\" 939) account_of_seed \"Operator1\") \"address\"))) (owner ((\"./FA2.py\" 773) resolve ((\"./FA2.py\" 773) attr ((\"./FA2.py\" 773) account_of_seed \"Alice\") \"address\"))) (token_id ((\"./FA2.py\" 206) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"./FA2.py\" 202)))) ((\"./FA2.py\" 989) variant \"remove_operator\" ((\"./FA2.py\" 209) type_annotation ((\"./FA2.py\" 206) record (operator ((\"./FA2.py\" 939) resolve ((\"./FA2.py\" 939) attr ((\"./FA2.py\" 939) account_of_seed \"Operator1\") \"address\"))) (owner ((\"./FA2.py\" 773) resolve ((\"./FA2.py\" 773) attr ((\"./FA2.py\" 773) account_of_seed \"Alice\") \"address\"))) (token_id ((\"./FA2.py\" 206) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"./FA2.py\" 202)))))",
    "sender": "seed:Alice"
   },
   {
    "action": "html",
    "inner": "Operator1 cannot transfer Alice's tokens any more",
    "line_no": "(\"./FA2.py\" 994)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"./FA2.py\" 781) static_id 0)",
    "line_no": "(\"./FA2.py\" 995)",
    "message": "transfer",
    "params": "((\"./FA2.py\" 995) list ((\"./FA2.py\" 187) type_annotation ((\"./FA2.py\" 186) record (from_ ((\"./FA2.py\" 773) resolve ((\"./FA2.py\" 773) attr ((\"./FA2.py\" 773) account_of_seed \"Alice\") \"address\"))) (txs ((\"./FA2.py\" 186) list ((\"./FA2.py\" 999) record (amount ((\"./FA2.py\" 999) literal (intOrNat 2))) (to_ ((\"./FA2.py\" 939) resolve ((\"./FA2.py\" 939) attr ((\"./FA2.py\" 939) account_of_seed \"Operator1\") \"address\"))) (token_id ((\"./FA2.py\" 999) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"./FA2.py\" 174))))) (Some ((\"from_\") (\"txs\"))) (\"./FA2.py\" 178))))",
    "sender": "seed:Operator1",
    "valid": "((\"./FA2.py\" 995) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Bob can add Operator0.",
    "line_no": "(\"./FA2.py\" 1003)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"./FA2.py\" 781) static_id 0)",
    "line_no": "(\"./FA2.py\" 1004)",
    "message": "update_operators",
    "params": "((\"./FA2.py\" 1004) list ((\"./FA2.py\" 1005) variant \"add_operator\" ((\"./FA2.py\" 209) type_annotation ((\"./FA2.py\" 206) record (operator ((\"./FA2.py\" 938) resolve ((\"./FA2.py\" 938) attr ((\"./FA2.py\" 938) account_of_seed \"Operator0\") \"address\"))) (owner ((\"./FA2.py\" 774) resolve ((\"./FA2.py\" 774) attr ((\"./FA2.py\" 774) account_of_seed \"Robert\") \"address\"))) (token_id ((\"./FA2.py\" 206) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"./FA2.py\" 202)))) ((\"./FA2.py\" 1009) variant \"add_operator\" ((\"./FA2.py\" 209) type_annotation ((\"./FA2.py\" 206) record (operator ((\"./FA2.py\" 938) resolve ((\"./FA2.py\" 938) attr ((\"./FA2.py\" 938) account_of_seed \"Operator0\") \"address\"))) (owner ((\"./FA2.py\" 774) resolve ((\"./FA2.py\" 774) attr ((\"./FA2.py\" 774) account_of_seed \"Robert\") \"address\"))) (token_id ((\"./FA2.py\" 206) literal (intOrNat 1)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"./FA2.py\" 202)))))",
    "sender": "seed:Robert"
   },
   {
    "action": "html",
    "inner": "Operator0 can transfer Bob's tokens '0' and '1'",
    "line_no": "(\"./FA2.py\" 1014)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"./FA2.py\" 781) static_id 0)",
    "line_no": "(\"./FA2.py\" 1015)",
    "message": "transfer",
    "params": "((\"./FA2.py\" 1015) list ((\"./FA2.py\" 187) type_annotation ((\"./FA2.py\" 186) record (from_ ((\"./FA2.py\" 774) resolve ((\"./FA2.py\" 774) attr ((\"./FA2.py\" 774) account_of_seed \"Robert\") \"address\"))) (txs ((\"./FA2.py\" 186) list ((\"./FA2.py\" 1019) record (amount ((\"./FA2.py\" 1019) literal (intOrNat 1))) (to_ ((\"./FA2.py\" 773) resolve ((\"./FA2.py\" 773) attr ((\"./FA2.py\" 773) account_of_seed \"Alice\") \"address\"))) (token_id ((\"./FA2.py\" 1019) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"./FA2.py\" 174))))) (Some ((\"from_\") (\"txs\"))) (\"./FA2.py\" 178))) ((\"./FA2.py\" 187) type_annotation ((\"./FA2.py\" 186) record (from_ ((\"./FA2.py\" 774) resolve ((\"./FA2.py\" 774) attr ((\"./FA2.py\" 774) account_of_seed \"Robert\") \"address\"))) (txs ((\"./FA2.py\" 186) list ((\"./FA2.py\" 1024) record (amount ((\"./FA2.py\" 1024) literal (intOrNat 1))) (to_ ((\"./FA2.py\" 773) resolve ((\"./FA2.py\" 773) attr ((\"./FA2.py\" 773) account_of_seed \"Alice\") \"address\"))) (token_id ((\"./FA2.py\" 1024) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"./FA2.py\" 174))))) (Some ((\"from_\") (\"txs\"))) (\"./FA2.py\" 178))))",
    "sender": "seed:Operator0"
   },
   {
    "action": "html",
    "inner": "Bob cannot add Operator0 for Alice's tokens.",
    "line_no": "(\"./FA2.py\" 1028)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"./FA2.py\" 781) static_id 0)",
    "line_no": "(\"./FA2.py\" 1029)",
    "message": "update_operators",
    "params": "((\"./FA2.py\" 1029) list ((\"./FA2.py\" 1030) variant \"add_operator\" ((\"./FA2.py\" 209) type_annotation ((\"./FA2.py\" 206) record (operator ((\"./FA2.py\" 938) resolve ((\"./FA2.py\" 938) attr ((\"./FA2.py\" 938) account_of_seed \"Operator0\") \"address\"))) (owner ((\"./FA2.py\" 773) resolve ((\"./FA2.py\" 773) attr ((\"./FA2.py\" 773) account_of_seed \"Alice\") \"address\"))) (token_id ((\"./FA2.py\" 206) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"./FA2.py\" 202)))))",
    "sender": "seed:Robert",
    "valid": "((\"./FA2.py\" 1029) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Alice can also add Operator0 for their tokens 0.",
    "line_no": "(\"./FA2.py\" 1036)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"./FA2.py\" 781) static_id 0)",
    "line_no": "(\"./FA2.py\" 1037)",
    "message": "update_operators",
    "params": "((\"./FA2.py\" 1037) list ((\"./FA2.py\" 1038) variant \"add_operator\" ((\"./FA2.py\" 209) type_annotation ((\"./FA2.py\" 206) record (operator ((\"./FA2.py\" 938) resolve ((\"./FA2.py\" 938) attr ((\"./FA2.py\" 938) account_of_seed \"Operator0\") \"address\"))) (owner ((\"./FA2.py\" 773) resolve ((\"./FA2.py\" 773) attr ((\"./FA2.py\" 773) account_of_seed \"Alice\") \"address\"))) (token_id ((\"./FA2.py\" 206) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"./FA2.py\" 202)))))",
    "sender": "seed:Alice"
   },
   {
    "action": "html",
    "inner": "Operator0 can now transfer Bob's and Alice's 0-tokens.",
    "line_no": "(\"./FA2.py\" 1044)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"./FA2.py\" 781) static_id 0)",
    "line_no": "(\"./FA2.py\" 1045)",
    "message": "transfer",
    "params": "((\"./FA2.py\" 1045) list ((\"./FA2.py\" 187) type_annotation ((\"./FA2.py\" 186) record (from_ ((\"./FA2.py\" 774) resolve ((\"./FA2.py\" 774) attr ((\"./FA2.py\" 774) account_of_seed \"Robert\") \"address\"))) (txs ((\"./FA2.py\" 186) list ((\"./FA2.py\" 1049) record (amount ((\"./FA2.py\" 1049) literal (intOrNat 1))) (to_ ((\"./FA2.py\" 773) resolve ((\"./FA2.py\" 773) attr ((\"./FA2.py\" 773) account_of_seed \"Alice\") \"address\"))) (token_id ((\"./FA2.py\" 1049) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"./FA2.py\" 174))))) (Some ((\"from_\") (\"txs\"))) (\"./FA2.py\" 178))) ((\"./FA2.py\" 187) type_annotation ((\"./FA2.py\" 186) record (from_ ((\"./FA2.py\" 773) resolve ((\"./FA2.py\" 773) attr ((\"./FA2.py\" 773) account_of_seed \"Alice\") \"address\"))) (txs ((\"./FA2.py\" 186) list ((\"./FA2.py\" 1054) record (amount ((\"./FA2.py\" 1054) literal (intOrNat 1))) (to_ ((\"./FA2.py\" 774) resolve ((\"./FA2.py\" 774) attr ((\"./FA2.py\" 774) account_of_seed \"Robert\") \"address\"))) (token_id ((\"./FA2.py\" 1054) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"./FA2.py\" 174))))) (Some ((\"from_\") (\"txs\"))) (\"./FA2.py\" 178))))",
    "sender": "seed:Operator0"
   },
   {
    "action": "html",
    "inner": "Bob adds Operator2 as second operator for 0-tokens.",
    "line_no": "(\"./FA2.py\" 1058)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"./FA2.py\" 781) static_id 0)",
    "line_no": "(\"./FA2.py\" 1059)",
    "message": "update_operators",
    "params": "((\"./FA2.py\" 1059) list ((\"./FA2.py\" 1060) variant \"add_operator\" ((\"./FA2.py\" 209) type_annotation ((\"./FA2.py\" 206) record (operator ((\"./FA2.py\" 940) resolve ((\"./FA2.py\" 940) attr ((\"./FA2.py\" 940) account_of_seed \"Operator2\") \"address\"))) (owner ((\"./FA2.py\" 774) resolve ((\"./FA2.py\" 774) attr ((\"./FA2.py\" 774) account_of_seed \"Robert\") \"address\"))) (token_id ((\"./FA2.py\" 206) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"./FA2.py\" 202)))))",
    "sender": "seed:Robert"
   },
   {
    "action": "html",
    "inner": "Operator0 and Operator2 can transfer Bob's 0-tokens.",
    "line_no": "(\"./FA2.py\" 1066)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"./FA2.py\" 781) static_id 0)",
    "line_no": "(\"./FA2.py\" 1067)",
    "message": "transfer",
    "params": "((\"./FA2.py\" 1067) list ((\"./FA2.py\" 187) type_annotation ((\"./FA2.py\" 186) record (from_ ((\"./FA2.py\" 774) resolve ((\"./FA2.py\" 774) attr ((\"./FA2.py\" 774) account_of_seed \"Robert\") \"address\"))) (txs ((\"./FA2.py\" 186) list ((\"./FA2.py\" 1071) record (amount ((\"./FA2.py\" 1071) literal (intOrNat 1))) (to_ ((\"./FA2.py\" 773) resolve ((\"./FA2.py\" 773) attr ((\"./FA2.py\" 773) account_of_seed \"Alice\") \"address\"))) (token_id ((\"./FA2.py\" 1071) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"./FA2.py\" 174))))) (Some ((\"from_\") (\"txs\"))) (\"./FA2.py\" 178))))",
    "sender": "seed:Operator0"
   },
   {
    "action": "message",
    "id": "((\"./FA2.py\" 781) static_id 0)",
    "line_no": "(\"./FA2.py\" 1075)",
    "message": "transfer",
    "params": "((\"./FA2.py\" 1075) list ((\"./FA2.py\" 187) type_annotation ((\"./FA2.py\" 186) record (from_ ((\"./FA2.py\" 774) resolve ((\"./FA2.py\" 774) attr ((\"./FA2.py\" 774) account_of_seed \"Robert\") \"address\"))) (txs ((\"./FA2.py\" 186) list ((\"./FA2.py\" 1079) record (amount ((\"./FA2.py\" 1079) literal (intOrNat 1))) (to_ ((\"./FA2.py\" 773) resolve ((\"./FA2.py\" 773) attr ((\"./FA2.py\" 773) account_of_seed \"Alice\") \"address\"))) (token_id ((\"./FA2.py\" 1079) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"./FA2.py\" 174))))) (Some ((\"from_\") (\"txs\"))) (\"./FA2.py\" 178))))",
    "sender": "seed:Operator2"
   },
   {
    "action": "html",
    "inner": "[[TABLEOFCONTENTS]]",
    "line_no": "(\"./FA2.py\" 1083)",
    "tag": "p"
   }
  ],
  "kind": "test"
 },
 {
  "shortname": "FA2_comp",
  "longname": "FA2_comp",
  "scenario": [
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id ((\"\" -1) static_id 0) \nstorage ((\"./FA2.py\" 404) record (administrator ((\"./FA2.py\" 1134) literal (address \"tz1Sw1gGA6bi2drimg1yUYF6ZcTsmaCyNnuw\"))) (all_tokens ((\"./FA2.py\" 335) literal (nat 0))) (ledger ((\"./FA2.py\" 405) type_annotation ((\"./FA2.py\" 405) big_map ) (bigmap (unknown 1) (record ((balance \"nat\")) None (\"./FA2.py\" 240))))) (metadata ((\"./FA2.py\" 1132) big_map (((\"\" -1) literal (string \"\")) ((\"./FA2.py\" 1132) literal (bytes \"0x68747470733a2f2f6578616d706c652e636f6d\"))))) (operators ((\"./FA2.py\" 269) type_annotation ((\"./FA2.py\" 269) big_map ) (bigmap (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"./FA2.py\" 260)) \"unit\"))) (paused ((\"./FA2.py\" 404) literal (bool False))) (token_metadata ((\"./FA2.py\" 406) type_annotation ((\"./FA2.py\" 406) big_map ) (bigmap \"nat\" (record ((token_id \"nat\") (token_info (map \"string\" \"bytes\"))) None (\"./FA2.py\" 315))))))\nstorage_type (())\nentry_points ((balance_of True None None None True None (\"./FA2.py\" 464) (((\"./FA2.py\" 466) verify ((\"./FA2.py\" 466) not ((\"./FA2.py\" 562) attr ((\"\" -1) data) \"paused\")) ((\"./FA2.py\" 466) literal (string \"FA2_PAUSED\"))) ((\"./FA2.py\" 467) set_type ((\"./FA2.py\" 464) params) (record ((callback (contract (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"./FA2.py\" 295)))) (Some ((\"request\") (\"balance\"))) (\"./FA2.py\" 301))))) (requests (list (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"./FA2.py\" 295))))) (Some ((\"requests\") (\"callback\"))) (\"./FA2.py\" 307))) ((\"./FA2.py\" 488) define_local \"responses\" ((\"./FA2.py\" 488) map_function ((\"./FA2.py\" 488) attr ((\"./FA2.py\" 464) params) \"requests\") ((\"./FA2.py\" 488) lambda_general None False None \"_x0\" \"\" (((\"./FA2.py\" 471) verify ((\"./FA2.py\" 471) contains ((\"./FA2.py\" 471) attr ((\"\" -1) data) \"token_metadata\") ((\"./FA2.py\" 470) attr ((\"./FA2.py\" 488) lambda_params \"_x0\") \"token_id\")) ((\"./FA2.py\" 471) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"./FA2.py\" 473) if_block ((\"./FA2.py\" 473) contains ((\"./FA2.py\" 473) attr ((\"\" -1) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 470) attr ((\"./FA2.py\" 488) lambda_params \"_x0\") \"owner\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 470) attr ((\"./FA2.py\" 488) lambda_params \"_x0\") \"token_id\") \"nat\"))) (((\"./FA2.py\" 475) result ((\"./FA2.py\" 476) record (balance ((\"./FA2.py\" 474) attr ((\"./FA2.py\" 474) get_item ((\"./FA2.py\" 473) attr ((\"\" -1) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 470) attr ((\"./FA2.py\" 488) lambda_params \"_x0\") \"owner\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 470) attr ((\"./FA2.py\" 488) lambda_params \"_x0\") \"token_id\") \"nat\"))) \"balance\")) (request ((\"./FA2.py\" 477) record (owner ((\"./FA2.py\" 478) type_annotation ((\"./FA2.py\" 470) attr ((\"./FA2.py\" 488) lambda_params \"_x0\") \"owner\") \"address\")) (token_id ((\"./FA2.py\" 479) type_annotation ((\"./FA2.py\" 470) attr ((\"./FA2.py\" 488) lambda_params \"_x0\") \"token_id\") \"nat\")))))))) (else_block (((\"./FA2.py\" 482) result ((\"./FA2.py\" 483) record (balance ((\"./FA2.py\" 483) literal (intOrNat 0))) (request ((\"./FA2.py\" 484) record (owner ((\"./FA2.py\" 485) type_annotation ((\"./FA2.py\" 470) attr ((\"./FA2.py\" 488) lambda_params \"_x0\") \"owner\") \"address\")) (token_id ((\"./FA2.py\" 486) type_annotation ((\"./FA2.py\" 470) attr ((\"./FA2.py\" 488) lambda_params \"_x0\") \"token_id\") \"nat\"))))))))))) True) ((\"./FA2.py\" 491) set ((\"./FA2.py\" 491) operations) ((\"./FA2.py\" 491) cons ((\"./FA2.py\" 491) transfer ((\"./FA2.py\" 491) get_local \"responses\") ((\"./FA2.py\" 491) literal (mutez 0)) ((\"./FA2.py\" 489) type_annotation ((\"./FA2.py\" 490) attr ((\"./FA2.py\" 464) params) \"callback\") (contract (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"./FA2.py\" 295)))) (Some ((\"request\") (\"balance\"))) (\"./FA2.py\" 301)))))) ((\"./FA2.py\" 491) operations))))) (mint True None None None True None (\"./FA2.py\" 581) (((\"./FA2.py\" 589) verify ((\"./FA2.py\" 590) not ((\"./FA2.py\" 349) lt ((\"./FA2.py\" 591) attr ((\"./FA2.py\" 581) params) \"token_id\") ((\"./FA2.py\" 591) attr ((\"\" -1) data) \"all_tokens\"))) ((\"./FA2.py\" 589) literal (string \"NFT-asset: cannot mint twice same token\"))) ((\"./FA2.py\" 595) if_block ((\"./FA2.py\" 595) contains ((\"./FA2.py\" 473) attr ((\"\" -1) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 594) attr ((\"./FA2.py\" 581) params) \"address\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 591) attr ((\"./FA2.py\" 581) params) \"token_id\") \"nat\"))) (((\"./FA2.py\" 596) set ((\"./FA2.py\" 596) attr ((\"./FA2.py\" 596) get_item ((\"./FA2.py\" 473) attr ((\"\" -1) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 594) attr ((\"./FA2.py\" 581) params) \"address\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 591) attr ((\"./FA2.py\" 581) params) \"token_id\") \"nat\"))) \"balance\") ((\"./FA2.py\" 596) add ((\"./FA2.py\" 596) attr ((\"./FA2.py\" 596) get_item ((\"./FA2.py\" 473) attr ((\"\" -1) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 594) attr ((\"./FA2.py\" 581) params) \"address\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 591) attr ((\"./FA2.py\" 581) params) \"token_id\") \"nat\"))) \"balance\") ((\"./FA2.py\" 596) attr ((\"./FA2.py\" 581) params) \"amount\"))))) (else_block (((\"./FA2.py\" 598) set ((\"./FA2.py\" 598) get_item ((\"./FA2.py\" 473) attr ((\"\" -1) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 594) attr ((\"./FA2.py\" 581) params) \"address\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 591) attr ((\"./FA2.py\" 581) params) \"token_id\") \"nat\"))) ((\"./FA2.py\" 243) record (balance ((\"./FA2.py\" 596) attr ((\"./FA2.py\" 581) params) \"amount\")))))) ((\"./FA2.py\" 599) if_block ((\"./FA2.py\" 599) not ((\"./FA2.py\" 349) lt ((\"./FA2.py\" 591) attr ((\"./FA2.py\" 581) params) \"token_id\") ((\"./FA2.py\" 591) attr ((\"\" -1) data) \"all_tokens\"))) (((\"./FA2.py\" 341) verify ((\"./FA2.py\" 341) eq ((\"./FA2.py\" 591) attr ((\"\" -1) data) \"all_tokens\") ((\"./FA2.py\" 591) attr ((\"./FA2.py\" 581) params) \"token_id\")) ((\"./FA2.py\" 341) literal (string \"Token-IDs should be consecutive\"))) ((\"./FA2.py\" 343) set ((\"./FA2.py\" 591) attr ((\"\" -1) data) \"all_tokens\") ((\"./FA2.py\" 343) add ((\"./FA2.py\" 591) attr ((\"./FA2.py\" 581) params) \"token_id\") ((\"./FA2.py\" 343) literal (intOrNat 1)))) ((\"./FA2.py\" 601) set ((\"./FA2.py\" 601) get_item ((\"./FA2.py\" 471) attr ((\"\" -1) data) \"token_metadata\") ((\"./FA2.py\" 591) attr ((\"./FA2.py\" 581) params) \"token_id\")) ((\"./FA2.py\" 601) record (token_id ((\"./FA2.py\" 591) attr ((\"./FA2.py\" 581) params) \"token_id\")) (token_info ((\"./FA2.py\" 603) attr ((\"./FA2.py\" 581) params) \"metadata\")))))))) (set_administrator True None None None True None (\"./FA2.py\" 554) (((\"./FA2.py\" 555) verify ((\"./FA2.py\" 551) eq ((\"\" -1) sender) ((\"./FA2.py\" 551) attr ((\"\" -1) data) \"administrator\")) ((\"./FA2.py\" 555) literal (string \"FA2_NOT_ADMIN\"))) ((\"./FA2.py\" 557) set ((\"./FA2.py\" 551) attr ((\"\" -1) data) \"administrator\") ((\"./FA2.py\" 554) params)))) (set_metadata True None None None True None (\"./FA2.py\" 573) (((\"./FA2.py\" 574) verify ((\"./FA2.py\" 551) eq ((\"\" -1) sender) ((\"./FA2.py\" 551) attr ((\"\" -1) data) \"administrator\")) ((\"./FA2.py\" 574) literal (string \"FA2_NOT_ADMIN\"))) ((\"./FA2.py\" 576) set ((\"./FA2.py\" 576) get_item ((\"./FA2.py\" 576) attr ((\"\" -1) data) \"metadata\") ((\"\" -1) attr ((\"./FA2.py\" 573) params) \"k\")) ((\"\" -1) attr ((\"./FA2.py\" 573) params) \"v\")))) (set_pause True None None None True None (\"./FA2.py\" 565) (((\"./FA2.py\" 566) verify ((\"./FA2.py\" 551) eq ((\"\" -1) sender) ((\"./FA2.py\" 551) attr ((\"\" -1) data) \"administrator\")) ((\"./FA2.py\" 566) literal (string \"FA2_NOT_ADMIN\"))) ((\"./FA2.py\" 568) set ((\"./FA2.py\" 562) attr ((\"\" -1) data) \"paused\") ((\"./FA2.py\" 565) params)))) (transfer True None None None True None (\"./FA2.py\" 420) (((\"./FA2.py\" 421) verify ((\"./FA2.py\" 421) not ((\"./FA2.py\" 562) attr ((\"\" -1) data) \"paused\")) ((\"./FA2.py\" 421) literal (string \"FA2_PAUSED\"))) ((\"./FA2.py\" 422) set_type ((\"./FA2.py\" 420) params) (list (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"./FA2.py\" 174))))) (Some ((\"from_\") (\"txs\"))) (\"./FA2.py\" 178)))) ((\"./FA2.py\" 423) for_group \"transfer\" ((\"./FA2.py\" 420) params) (((\"./FA2.py\" 425) for_group \"tx\" ((\"./FA2.py\" 425) attr ((\"./FA2.py\" 423) iter \"transfer\") \"txs\") (((\"./FA2.py\" 441) verify ((\"./FA2.py\" 435) or ((\"./FA2.py\" 430) or ((\"./FA2.py\" 551) eq ((\"\" -1) sender) ((\"./FA2.py\" 551) attr ((\"\" -1) data) \"administrator\")) ((\"./FA2.py\" 431) eq ((\"./FA2.py\" 424) attr ((\"./FA2.py\" 423) iter \"transfer\") \"from_\") ((\"\" -1) sender))) ((\"./FA2.py\" 288) contains ((\"./FA2.py\" 435) attr ((\"\" -1) data) \"operators\") ((\"./FA2.py\" 275) type_annotation ((\"./FA2.py\" 272) record (operator ((\"\" -1) sender)) (owner ((\"./FA2.py\" 424) attr ((\"./FA2.py\" 423) iter \"transfer\") \"from_\")) (token_id ((\"./FA2.py\" 438) attr ((\"./FA2.py\" 425) iter \"tx\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"./FA2.py\" 260))))) ((\"./FA2.py\" 441) literal (string \"FA2_NOT_OPERATOR\"))) ((\"./FA2.py\" 442) verify ((\"./FA2.py\" 443) contains ((\"./FA2.py\" 471) attr ((\"\" -1) data) \"token_metadata\") ((\"./FA2.py\" 438) attr ((\"./FA2.py\" 425) iter \"tx\") \"token_id\")) ((\"./FA2.py\" 442) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"./FA2.py\" 447) if_block ((\"./FA2.py\" 447) gt ((\"./FA2.py\" 447) attr ((\"./FA2.py\" 425) iter \"tx\") \"amount\") ((\"./FA2.py\" 447) literal (intOrNat 0))) (((\"./FA2.py\" 449) verify ((\"./FA2.py\" 450) ge ((\"./FA2.py\" 450) attr ((\"./FA2.py\" 450) get_item ((\"./FA2.py\" 473) attr ((\"\" -1) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 424) attr ((\"./FA2.py\" 423) iter \"transfer\") \"from_\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 438) attr ((\"./FA2.py\" 425) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"./FA2.py\" 447) attr ((\"./FA2.py\" 425) iter \"tx\") \"amount\")) ((\"./FA2.py\" 449) literal (string \"FA2_INSUFFICIENT_BALANCE\"))) ((\"./FA2.py\" 453) set ((\"./FA2.py\" 453) attr ((\"./FA2.py\" 453) get_item ((\"./FA2.py\" 473) attr ((\"\" -1) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 424) attr ((\"./FA2.py\" 423) iter \"transfer\") \"from_\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 438) attr ((\"./FA2.py\" 425) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"./FA2.py\" 453) open_variant ((\"./FA2.py\" 453) is_nat ((\"./FA2.py\" 454) sub ((\"./FA2.py\" 454) attr ((\"./FA2.py\" 454) get_item ((\"./FA2.py\" 473) attr ((\"\" -1) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 424) attr ((\"./FA2.py\" 423) iter \"transfer\") \"from_\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 438) attr ((\"./FA2.py\" 425) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"./FA2.py\" 447) attr ((\"./FA2.py\" 425) iter \"tx\") \"amount\"))) \"Some\" \"None\")) ((\"./FA2.py\" 455) if_block ((\"./FA2.py\" 455) contains ((\"./FA2.py\" 473) attr ((\"\" -1) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 452) attr ((\"./FA2.py\" 425) iter \"tx\") \"to_\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 438) attr ((\"./FA2.py\" 425) iter \"tx\") \"token_id\") \"nat\"))) (((\"./FA2.py\" 456) set ((\"./FA2.py\" 456) attr ((\"./FA2.py\" 456) get_item ((\"./FA2.py\" 473) attr ((\"\" -1) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 452) attr ((\"./FA2.py\" 425) iter \"tx\") \"to_\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 438) attr ((\"./FA2.py\" 425) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"./FA2.py\" 456) add ((\"./FA2.py\" 456) attr ((\"./FA2.py\" 456) get_item ((\"./FA2.py\" 473) attr ((\"\" -1) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 452) attr ((\"./FA2.py\" 425) iter \"tx\") \"to_\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 438) attr ((\"./FA2.py\" 425) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"./FA2.py\" 447) attr ((\"./FA2.py\" 425) iter \"tx\") \"amount\"))))) (else_block (((\"./FA2.py\" 458) set ((\"./FA2.py\" 458) get_item ((\"./FA2.py\" 473) attr ((\"\" -1) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 452) attr ((\"./FA2.py\" 425) iter \"tx\") \"to_\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 438) attr ((\"./FA2.py\" 425) iter \"tx\") \"token_id\") \"nat\"))) ((\"./FA2.py\" 243) record (balance ((\"./FA2.py\" 447) attr ((\"./FA2.py\" 425) iter \"tx\") \"amount\")))))))) (else_block ()))))))) (update_operators True None None None True None (\"./FA2.py\" 507) (((\"./FA2.py\" 508) set_type ((\"./FA2.py\" 507) params) (list (variant ((add_operator (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"./FA2.py\" 202))) (remove_operator (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"./FA2.py\" 202)))) None (\"./FA2.py\" 509)))) ((\"./FA2.py\" 515) for_group \"update\" ((\"./FA2.py\" 507) params) (((\"./FA2.py\" 516) match_cases ((\"./FA2.py\" 515) iter \"update\") \"match_FA2_516\" (((\"./FA2.py\" 517) match ((\"./FA2.py\" 516) cases_arg \"match_FA2_516\") \"add_operator\" \"add_operator\" (((\"./FA2.py\" 518) verify ((\"./FA2.py\" 519) or ((\"./FA2.py\" 519) eq ((\"./FA2.py\" 519) attr ((\"./FA2.py\" 517) variant_arg \"add_operator\") \"owner\") ((\"\" -1) sender)) ((\"./FA2.py\" 551) eq ((\"\" -1) sender) ((\"./FA2.py\" 551) attr ((\"\" -1) data) \"administrator\"))) ((\"./FA2.py\" 518) literal (string \"FA2_NOT_ADMIN_OR_OPERATOR\"))) ((\"./FA2.py\" 282) set ((\"./FA2.py\" 282) get_item ((\"./FA2.py\" 435) attr ((\"\" -1) data) \"operators\") ((\"./FA2.py\" 275) type_annotation ((\"./FA2.py\" 272) record (operator ((\"./FA2.py\" 525) attr ((\"./FA2.py\" 517) variant_arg \"add_operator\") \"operator\")) (owner ((\"./FA2.py\" 519) attr ((\"./FA2.py\" 517) variant_arg \"add_operator\") \"owner\")) (token_id ((\"./FA2.py\" 526) attr ((\"./FA2.py\" 517) variant_arg \"add_operator\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"./FA2.py\" 260)))) ((\"\" -1) literal (unit))))) ((\"./FA2.py\" 527) match ((\"./FA2.py\" 516) cases_arg \"match_FA2_516\") \"remove_operator\" \"remove_operator\" (((\"./FA2.py\" 528) verify ((\"./FA2.py\" 529) or ((\"./FA2.py\" 529) eq ((\"./FA2.py\" 529) attr ((\"./FA2.py\" 527) variant_arg \"remove_operator\") \"owner\") ((\"\" -1) sender)) ((\"./FA2.py\" 551) eq ((\"\" -1) sender) ((\"./FA2.py\" 551) attr ((\"\" -1) data) \"administrator\"))) ((\"./FA2.py\" 528) literal (string \"FA2_NOT_ADMIN_OR_OPERATOR\"))) ((\"./FA2.py\" 285) del_item ((\"./FA2.py\" 435) attr ((\"\" -1) data) \"operators\") ((\"./FA2.py\" 275) type_annotation ((\"./FA2.py\" 272) record (operator ((\"./FA2.py\" 535) attr ((\"./FA2.py\" 527) variant_arg \"remove_operator\") \"operator\")) (owner ((\"./FA2.py\" 529) attr ((\"./FA2.py\" 527) variant_arg \"remove_operator\") \"owner\")) (token_id ((\"./FA2.py\" 536) attr ((\"./FA2.py\" 527) variant_arg \"remove_operator\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"./FA2.py\" 260)))))))))))))\nflags ((initial-cast) (exceptions default-line))\nprivates ()\nviews ((offchain all_tokens False (\"./FA2.py\" 650) True \"\\n            This view is specified (but optional) in the standard.\\n\\n            This contract is built with assume_consecutive_token_ids =\\n            True, so we return a list constructed from the number of tokens.\\n            \" (((\"./FA2.py\" 652) result ((\"./FA2.py\" 652) range ((\"./FA2.py\" 652) literal (intOrNat 0)) ((\"./FA2.py\" 652) attr ((\"\" -1) data) \"all_tokens\") ((\"./FA2.py\" 652) literal (intOrNat 1)))))) (offchain count_tokens False (\"./FA2.py\" 638) True \"Get how many tokens are in this FA2 contract.\\n        \" (((\"./FA2.py\" 641) result ((\"./FA2.py\" 641) attr ((\"\" -1) data) \"all_tokens\")))) (offchain does_token_exist True (\"./FA2.py\" 644) True \"Ask whether a token ID is exists.\" (((\"./FA2.py\" 646) set_type ((\"./FA2.py\" 644) params) \"nat\") ((\"./FA2.py\" 647) result ((\"./FA2.py\" 647) contains ((\"./FA2.py\" 647) attr ((\"\" -1) data) \"token_metadata\") ((\"./FA2.py\" 644) params))))) (offchain get_balance True (\"./FA2.py\" 494) True \"This is the `get_balance` view defined in TZIP-12.\" (((\"./FA2.py\" 496) set_type ((\"./FA2.py\" 494) params) (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"./FA2.py\" 500))) ((\"./FA2.py\" 502) verify ((\"./FA2.py\" 502) contains ((\"./FA2.py\" 502) attr ((\"\" -1) data) \"token_metadata\") ((\"./FA2.py\" 501) attr ((\"./FA2.py\" 494) params) \"token_id\")) ((\"./FA2.py\" 502) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"./FA2.py\" 504) result ((\"./FA2.py\" 504) attr ((\"./FA2.py\" 504) get_item ((\"./FA2.py\" 504) attr ((\"\" -1) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 501) attr ((\"./FA2.py\" 494) params) \"owner\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 501) attr ((\"./FA2.py\" 494) params) \"token_id\") \"nat\"))) \"balance\")))) (offchain is_operator True (\"./FA2.py\" 665) True \"\" (((\"./FA2.py\" 666) set_type ((\"./FA2.py\" 665) params) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"./FA2.py\" 669))) ((\"./FA2.py\" 671) result ((\"./FA2.py\" 288) contains ((\"./FA2.py\" 672) attr ((\"\" -1) data) \"operators\") ((\"./FA2.py\" 275) type_annotation ((\"./FA2.py\" 272) record (operator ((\"./FA2.py\" 674) attr ((\"./FA2.py\" 665) params) \"operator\")) (owner ((\"./FA2.py\" 673) attr ((\"./FA2.py\" 665) params) \"owner\")) (token_id ((\"./FA2.py\" 675) attr ((\"./FA2.py\" 665) params) \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"./FA2.py\" 260))))))) (offchain token_metadata True (\"./FA2.py\" 622) True \"Get Token Metadata\" (((\"./FA2.py\" 619) set_type ((\"./FA2.py\" 622) params) \"nat\") ((\"./FA2.py\" 620) result ((\"./FA2.py\" 620) get_item ((\"./FA2.py\" 620) attr ((\"\" -1) data) \"token_metadata\") ((\"./FA2.py\" 622) params))))) (offchain total_supply True (\"./FA2.py\" 657) True \"\" (((\"./FA2.py\" 661) set_type ((\"./FA2.py\" 657) params) \"nat\") ((\"./FA2.py\" 662) result ((\"./FA2.py\" 662) literal (string \"total-supply not supported\"))))))\nentry_points_layout ()\ninitial_metadata ((metadata_base (meta_map (\"./FA2.py\" 725) (elem ((\"./FA2.py\" 725) literal (string \"version\")) (meta_expr ((\"./FA2.py\" 725) literal (string \"FA2-nft-no_totsup\")))) (elem ((\"./FA2.py\" 725) literal (string \"description\")) (meta_expr ((\"./FA2.py\" 725) literal (string \"This is a didactic reference implementation of FA2, a.k.a. TZIP-012, using SmartPy.\n\nThis particular contract uses the configuration named: FA2-nft-no_totsup.\")))) (elem ((\"./FA2.py\" 725) literal (string \"interfaces\")) (meta_list (\"./FA2.py\" 725) (meta_expr ((\"./FA2.py\" 725) literal (string \"TZIP-012\"))) (meta_expr ((\"./FA2.py\" 725) literal (string \"TZIP-016\"))))) (elem ((\"./FA2.py\" 725) literal (string \"authors\")) (meta_list (\"./FA2.py\" 725) (meta_expr ((\"./FA2.py\" 725) literal (string \"Seb Mondet <https://seb.mondet.org>\"))))) (elem ((\"./FA2.py\" 725) literal (string \"homepage\")) (meta_expr ((\"./FA2.py\" 725) literal (string \"https://gitlab.com/smondet/fa2-smartpy\")))) (elem ((\"./FA2.py\" 725) literal (string \"views\")) (meta_list (\"./FA2.py\" 725) (meta_view \"get_balance\" (\"./FA2.py\" 494)) (meta_view \"does_token_exist\" (\"./FA2.py\" 644)) (meta_view \"count_tokens\" (\"./FA2.py\" 638)) (meta_view \"all_tokens\" (\"./FA2.py\" 650)) (meta_view \"is_operator\" (\"./FA2.py\" 665)) (meta_view \"token_metadata\" (\"./FA2.py\" 622)))) (elem ((\"./FA2.py\" 725) literal (string \"source\")) (meta_map (\"./FA2.py\" 725) (elem ((\"./FA2.py\" 725) literal (string \"tools\")) (meta_list (\"./FA2.py\" 725) (meta_expr ((\"./FA2.py\" 725) literal (string \"SmartPy\"))))) (elem ((\"./FA2.py\" 725) literal (string \"location\")) (meta_expr ((\"./FA2.py\" 725) literal (string \"https://gitlab.com/smondet/fa2-smartpy.git\")))))) (elem ((\"./FA2.py\" 725) literal (string \"permissions\")) (meta_map (\"./FA2.py\" 725) (elem ((\"./FA2.py\" 725) literal (string \"operator\")) (meta_expr ((\"./FA2.py\" 725) literal (string \"owner-or-operator-transfer\")))) (elem ((\"./FA2.py\" 725) literal (string \"receiver\")) (meta_expr ((\"./FA2.py\" 725) literal (string \"owner-no-hook\")))) (elem ((\"./FA2.py\" 725) literal (string \"sender\")) (meta_expr ((\"./FA2.py\" 725) literal (string \"owner-no-hook\")))))) (elem ((\"./FA2.py\" 725) literal (string \"fa2-smartpy\")) (meta_map (\"./FA2.py\" 725) (elem ((\"./FA2.py\" 725) literal (string \"configuration\")) (meta_map (\"./FA2.py\" 725) (elem ((\"./FA2.py\" 725) literal (string \"add_mutez_transfer\")) (meta_expr ((\"./FA2.py\" 725) literal (bool False)))) (elem ((\"./FA2.py\" 725) literal (string \"allow_self_transfer\")) (meta_expr ((\"./FA2.py\" 725) literal (bool False)))) (elem ((\"./FA2.py\" 725) literal (string \"assume_consecutive_token_ids\")) (meta_expr ((\"./FA2.py\" 725) literal (bool True)))) (elem ((\"./FA2.py\" 725) literal (string \"force_layouts\")) (meta_expr ((\"./FA2.py\" 725) literal (bool True)))) (elem ((\"./FA2.py\" 725) literal (string \"lazy_entry_points\")) (meta_expr ((\"./FA2.py\" 725) literal (bool False)))) (elem ((\"./FA2.py\" 725) literal (string \"name\")) (meta_expr ((\"./FA2.py\" 725) literal (string \"FA2-nft-no_totsup\")))) (elem ((\"./FA2.py\" 725) literal (string \"non_fungible\")) (meta_expr ((\"./FA2.py\" 725) literal (bool True)))) (elem ((\"./FA2.py\" 725) literal (string \"readable\")) (meta_expr ((\"./FA2.py\" 725) literal (bool True)))) (elem ((\"./FA2.py\" 725) literal (string \"single_asset\")) (meta_expr ((\"./FA2.py\" 725) literal (bool False)))) (elem ((\"./FA2.py\" 725) literal (string \"store_total_supply\")) (meta_expr ((\"./FA2.py\" 725) literal (bool False)))) (elem ((\"./FA2.py\" 725) literal (string \"support_operator\")) (meta_expr ((\"./FA2.py\" 725) literal (bool True)))) (elem ((\"./FA2.py\" 725) literal (string \"use_token_metadata_offchain_view\")) (meta_expr ((\"./FA2.py\" 725) literal (bool True)))))))))))\nbalance ())",
    "id": "((\"\" -1) static_id 0)",
    "line_no": "(\"\" -1)",
    "show": true
   }
  ],
  "kind": "compilation"
 },
 {
  "shortname": "Contract_test",
  "longname": "Contract test",
  "scenario": [
   {
    "action": "html",
    "inner": "Quilt NFT Collection Contract Factory",
    "line_no": "(\"ContractFactory.py\" 73)",
    "tag": "h1"
   },
   {
    "action": "html",
    "inner": "[[TABLEOFCONTENTS]]",
    "line_no": "(\"ContractFactory.py\" 74)",
    "tag": "p"
   },
   {
    "action": "show",
    "compile": false,
    "expression": "((\"ContractFactory.py\" 78) list ((\"ContractFactory.py\" 77) account_of_seed \"Mark\") ((\"ContractFactory.py\" 76) account_of_seed \"Elon\") ((\"ContractFactory.py\" 75) account_of_seed \"Admin\"))",
    "html": true,
    "line_no": "(\"ContractFactory.py\" 78)",
    "stripStrings": false
   },
   {
    "action": "html",
    "inner": "Code",
    "line_no": "(\"ContractFactory.py\" 80)",
    "tag": "h1"
   },
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id ((\"ContractFactory.py\" 81) static_id 0) \nstorage ((\"ContractFactory.py\" 36) record (contracts ((\"ContractFactory.py\" 37) type_annotation ((\"ContractFactory.py\" 37) big_map ) (bigmap \"address\" (list \"address\")))))\nstorage_type (())\nentry_points ((deploy_fa2 True None None None True None (\"ContractFactory.py\" 42) (((\"ContractFactory.py\" 43) define_local \"create_contract_ContractFactory_43\" ((\"ContractFactory.py\" 43) create_contract (contract (template_id ((\"ContractFactory.py\" 81) static_id 1) \nstorage ((\"./FA2.py\" 404) record (administrator ((\"\" -1) self_address)) (all_tokens ((\"./FA2.py\" 335) literal (nat 0))) (ledger ((\"./FA2.py\" 405) type_annotation ((\"./FA2.py\" 405) big_map ) (bigmap (unknown 7) (record ((balance \"nat\")) None (\"./FA2.py\" 240))))) (metadata ((\"ContractFactory.py\" 42) params)) (operators ((\"./FA2.py\" 269) type_annotation ((\"./FA2.py\" 269) big_map ) (bigmap (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"./FA2.py\" 260)) \"unit\"))) (paused ((\"./FA2.py\" 404) literal (bool False))) (token_metadata ((\"./FA2.py\" 406) type_annotation ((\"./FA2.py\" 406) big_map ) (bigmap \"nat\" (record ((token_id \"nat\") (token_info (map \"string\" \"bytes\"))) None (\"./FA2.py\" 315))))))\nstorage_type (())\nentry_points ((balance_of True None None None True None (\"./FA2.py\" 464) (((\"./FA2.py\" 466) verify ((\"./FA2.py\" 466) not ((\"./FA2.py\" 562) attr ((\"ContractFactory.py\" 81) data) \"paused\")) ((\"./FA2.py\" 466) literal (string \"FA2_PAUSED\"))) ((\"./FA2.py\" 467) set_type ((\"./FA2.py\" 464) params) (record ((callback (contract (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"./FA2.py\" 295)))) (Some ((\"request\") (\"balance\"))) (\"./FA2.py\" 301))))) (requests (list (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"./FA2.py\" 295))))) (Some ((\"requests\") (\"callback\"))) (\"./FA2.py\" 307))) ((\"./FA2.py\" 488) define_local \"responses\" ((\"./FA2.py\" 488) map_function ((\"./FA2.py\" 488) attr ((\"./FA2.py\" 464) params) \"requests\") ((\"./FA2.py\" 488) lambda_general None False None \"_x0\" \"\" (((\"./FA2.py\" 471) verify ((\"./FA2.py\" 471) contains ((\"./FA2.py\" 471) attr ((\"ContractFactory.py\" 81) data) \"token_metadata\") ((\"./FA2.py\" 470) attr ((\"./FA2.py\" 488) lambda_params \"_x0\") \"token_id\")) ((\"./FA2.py\" 471) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"./FA2.py\" 473) if_block ((\"./FA2.py\" 473) contains ((\"./FA2.py\" 473) attr ((\"ContractFactory.py\" 81) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 470) attr ((\"./FA2.py\" 488) lambda_params \"_x0\") \"owner\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 470) attr ((\"./FA2.py\" 488) lambda_params \"_x0\") \"token_id\") \"nat\"))) (((\"./FA2.py\" 475) result ((\"./FA2.py\" 476) record (balance ((\"./FA2.py\" 474) attr ((\"./FA2.py\" 474) get_item ((\"./FA2.py\" 473) attr ((\"ContractFactory.py\" 81) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 470) attr ((\"./FA2.py\" 488) lambda_params \"_x0\") \"owner\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 470) attr ((\"./FA2.py\" 488) lambda_params \"_x0\") \"token_id\") \"nat\"))) \"balance\")) (request ((\"./FA2.py\" 477) record (owner ((\"./FA2.py\" 478) type_annotation ((\"./FA2.py\" 470) attr ((\"./FA2.py\" 488) lambda_params \"_x0\") \"owner\") \"address\")) (token_id ((\"./FA2.py\" 479) type_annotation ((\"./FA2.py\" 470) attr ((\"./FA2.py\" 488) lambda_params \"_x0\") \"token_id\") \"nat\")))))))) (else_block (((\"./FA2.py\" 482) result ((\"./FA2.py\" 483) record (balance ((\"./FA2.py\" 483) literal (intOrNat 0))) (request ((\"./FA2.py\" 484) record (owner ((\"./FA2.py\" 485) type_annotation ((\"./FA2.py\" 470) attr ((\"./FA2.py\" 488) lambda_params \"_x0\") \"owner\") \"address\")) (token_id ((\"./FA2.py\" 486) type_annotation ((\"./FA2.py\" 470) attr ((\"./FA2.py\" 488) lambda_params \"_x0\") \"token_id\") \"nat\"))))))))))) True) ((\"./FA2.py\" 491) set ((\"./FA2.py\" 491) operations) ((\"./FA2.py\" 491) cons ((\"./FA2.py\" 491) transfer ((\"./FA2.py\" 491) get_local \"responses\") ((\"./FA2.py\" 491) literal (mutez 0)) ((\"./FA2.py\" 489) type_annotation ((\"./FA2.py\" 490) attr ((\"./FA2.py\" 464) params) \"callback\") (contract (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"./FA2.py\" 295)))) (Some ((\"request\") (\"balance\"))) (\"./FA2.py\" 301)))))) ((\"./FA2.py\" 491) operations))))) (mint True None None None True None (\"./FA2.py\" 581) (((\"./FA2.py\" 589) verify ((\"./FA2.py\" 590) not ((\"./FA2.py\" 349) lt ((\"./FA2.py\" 591) attr ((\"./FA2.py\" 581) params) \"token_id\") ((\"./FA2.py\" 591) attr ((\"ContractFactory.py\" 81) data) \"all_tokens\"))) ((\"./FA2.py\" 589) literal (string \"NFT-asset: cannot mint twice same token\"))) ((\"./FA2.py\" 595) if_block ((\"./FA2.py\" 595) contains ((\"./FA2.py\" 473) attr ((\"ContractFactory.py\" 81) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 594) attr ((\"./FA2.py\" 581) params) \"address\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 591) attr ((\"./FA2.py\" 581) params) \"token_id\") \"nat\"))) (((\"./FA2.py\" 596) set ((\"./FA2.py\" 596) attr ((\"./FA2.py\" 596) get_item ((\"./FA2.py\" 473) attr ((\"ContractFactory.py\" 81) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 594) attr ((\"./FA2.py\" 581) params) \"address\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 591) attr ((\"./FA2.py\" 581) params) \"token_id\") \"nat\"))) \"balance\") ((\"./FA2.py\" 596) add ((\"./FA2.py\" 596) attr ((\"./FA2.py\" 596) get_item ((\"./FA2.py\" 473) attr ((\"ContractFactory.py\" 81) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 594) attr ((\"./FA2.py\" 581) params) \"address\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 591) attr ((\"./FA2.py\" 581) params) \"token_id\") \"nat\"))) \"balance\") ((\"./FA2.py\" 596) attr ((\"./FA2.py\" 581) params) \"amount\"))))) (else_block (((\"./FA2.py\" 598) set ((\"./FA2.py\" 598) get_item ((\"./FA2.py\" 473) attr ((\"ContractFactory.py\" 81) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 594) attr ((\"./FA2.py\" 581) params) \"address\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 591) attr ((\"./FA2.py\" 581) params) \"token_id\") \"nat\"))) ((\"./FA2.py\" 243) record (balance ((\"./FA2.py\" 596) attr ((\"./FA2.py\" 581) params) \"amount\")))))) ((\"./FA2.py\" 599) if_block ((\"./FA2.py\" 599) not ((\"./FA2.py\" 349) lt ((\"./FA2.py\" 591) attr ((\"./FA2.py\" 581) params) \"token_id\") ((\"./FA2.py\" 591) attr ((\"ContractFactory.py\" 81) data) \"all_tokens\"))) (((\"./FA2.py\" 341) verify ((\"./FA2.py\" 341) eq ((\"./FA2.py\" 591) attr ((\"ContractFactory.py\" 81) data) \"all_tokens\") ((\"./FA2.py\" 591) attr ((\"./FA2.py\" 581) params) \"token_id\")) ((\"./FA2.py\" 341) literal (string \"Token-IDs should be consecutive\"))) ((\"./FA2.py\" 343) set ((\"./FA2.py\" 591) attr ((\"ContractFactory.py\" 81) data) \"all_tokens\") ((\"./FA2.py\" 343) add ((\"./FA2.py\" 591) attr ((\"./FA2.py\" 581) params) \"token_id\") ((\"./FA2.py\" 343) literal (intOrNat 1)))) ((\"./FA2.py\" 601) set ((\"./FA2.py\" 601) get_item ((\"./FA2.py\" 471) attr ((\"ContractFactory.py\" 81) data) \"token_metadata\") ((\"./FA2.py\" 591) attr ((\"./FA2.py\" 581) params) \"token_id\")) ((\"./FA2.py\" 601) record (token_id ((\"./FA2.py\" 591) attr ((\"./FA2.py\" 581) params) \"token_id\")) (token_info ((\"./FA2.py\" 603) attr ((\"./FA2.py\" 581) params) \"metadata\")))))))) (set_administrator True None None None True None (\"./FA2.py\" 554) (((\"./FA2.py\" 555) verify ((\"./FA2.py\" 551) eq ((\"\" -1) sender) ((\"./FA2.py\" 551) attr ((\"ContractFactory.py\" 81) data) \"administrator\")) ((\"./FA2.py\" 555) literal (string \"FA2_NOT_ADMIN\"))) ((\"./FA2.py\" 557) set ((\"./FA2.py\" 551) attr ((\"ContractFactory.py\" 81) data) \"administrator\") ((\"./FA2.py\" 554) params)))) (set_metadata True None None None True None (\"./FA2.py\" 573) (((\"./FA2.py\" 574) verify ((\"./FA2.py\" 551) eq ((\"\" -1) sender) ((\"./FA2.py\" 551) attr ((\"ContractFactory.py\" 81) data) \"administrator\")) ((\"./FA2.py\" 574) literal (string \"FA2_NOT_ADMIN\"))) ((\"./FA2.py\" 576) set ((\"./FA2.py\" 576) get_item ((\"./FA2.py\" 576) attr ((\"ContractFactory.py\" 81) data) \"metadata\") ((\"ContractFactory.py\" 81) attr ((\"./FA2.py\" 573) params) \"k\")) ((\"ContractFactory.py\" 81) attr ((\"./FA2.py\" 573) params) \"v\")))) (set_pause True None None None True None (\"./FA2.py\" 565) (((\"./FA2.py\" 566) verify ((\"./FA2.py\" 551) eq ((\"\" -1) sender) ((\"./FA2.py\" 551) attr ((\"ContractFactory.py\" 81) data) \"administrator\")) ((\"./FA2.py\" 566) literal (string \"FA2_NOT_ADMIN\"))) ((\"./FA2.py\" 568) set ((\"./FA2.py\" 562) attr ((\"ContractFactory.py\" 81) data) \"paused\") ((\"./FA2.py\" 565) params)))) (transfer True None None None True None (\"./FA2.py\" 420) (((\"./FA2.py\" 421) verify ((\"./FA2.py\" 421) not ((\"./FA2.py\" 562) attr ((\"ContractFactory.py\" 81) data) \"paused\")) ((\"./FA2.py\" 421) literal (string \"FA2_PAUSED\"))) ((\"./FA2.py\" 422) set_type ((\"./FA2.py\" 420) params) (list (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"./FA2.py\" 174))))) (Some ((\"from_\") (\"txs\"))) (\"./FA2.py\" 178)))) ((\"./FA2.py\" 423) for_group \"transfer\" ((\"./FA2.py\" 420) params) (((\"./FA2.py\" 425) for_group \"tx\" ((\"./FA2.py\" 425) attr ((\"./FA2.py\" 423) iter \"transfer\") \"txs\") (((\"./FA2.py\" 441) verify ((\"./FA2.py\" 435) or ((\"./FA2.py\" 430) or ((\"./FA2.py\" 551) eq ((\"\" -1) sender) ((\"./FA2.py\" 551) attr ((\"ContractFactory.py\" 81) data) \"administrator\")) ((\"./FA2.py\" 431) eq ((\"./FA2.py\" 424) attr ((\"./FA2.py\" 423) iter \"transfer\") \"from_\") ((\"\" -1) sender))) ((\"./FA2.py\" 288) contains ((\"./FA2.py\" 435) attr ((\"ContractFactory.py\" 81) data) \"operators\") ((\"./FA2.py\" 275) type_annotation ((\"./FA2.py\" 272) record (operator ((\"\" -1) sender)) (owner ((\"./FA2.py\" 424) attr ((\"./FA2.py\" 423) iter \"transfer\") \"from_\")) (token_id ((\"./FA2.py\" 438) attr ((\"./FA2.py\" 425) iter \"tx\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"./FA2.py\" 260))))) ((\"./FA2.py\" 441) literal (string \"FA2_NOT_OPERATOR\"))) ((\"./FA2.py\" 442) verify ((\"./FA2.py\" 443) contains ((\"./FA2.py\" 471) attr ((\"ContractFactory.py\" 81) data) \"token_metadata\") ((\"./FA2.py\" 438) attr ((\"./FA2.py\" 425) iter \"tx\") \"token_id\")) ((\"./FA2.py\" 442) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"./FA2.py\" 447) if_block ((\"./FA2.py\" 447) gt ((\"./FA2.py\" 447) attr ((\"./FA2.py\" 425) iter \"tx\") \"amount\") ((\"./FA2.py\" 447) literal (intOrNat 0))) (((\"./FA2.py\" 449) verify ((\"./FA2.py\" 450) ge ((\"./FA2.py\" 450) attr ((\"./FA2.py\" 450) get_item ((\"./FA2.py\" 473) attr ((\"ContractFactory.py\" 81) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 424) attr ((\"./FA2.py\" 423) iter \"transfer\") \"from_\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 438) attr ((\"./FA2.py\" 425) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"./FA2.py\" 447) attr ((\"./FA2.py\" 425) iter \"tx\") \"amount\")) ((\"./FA2.py\" 449) literal (string \"FA2_INSUFFICIENT_BALANCE\"))) ((\"./FA2.py\" 453) set ((\"./FA2.py\" 453) attr ((\"./FA2.py\" 453) get_item ((\"./FA2.py\" 473) attr ((\"ContractFactory.py\" 81) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 424) attr ((\"./FA2.py\" 423) iter \"transfer\") \"from_\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 438) attr ((\"./FA2.py\" 425) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"./FA2.py\" 453) open_variant ((\"./FA2.py\" 453) is_nat ((\"./FA2.py\" 454) sub ((\"./FA2.py\" 454) attr ((\"./FA2.py\" 454) get_item ((\"./FA2.py\" 473) attr ((\"ContractFactory.py\" 81) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 424) attr ((\"./FA2.py\" 423) iter \"transfer\") \"from_\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 438) attr ((\"./FA2.py\" 425) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"./FA2.py\" 447) attr ((\"./FA2.py\" 425) iter \"tx\") \"amount\"))) \"Some\" \"None\")) ((\"./FA2.py\" 455) if_block ((\"./FA2.py\" 455) contains ((\"./FA2.py\" 473) attr ((\"ContractFactory.py\" 81) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 452) attr ((\"./FA2.py\" 425) iter \"tx\") \"to_\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 438) attr ((\"./FA2.py\" 425) iter \"tx\") \"token_id\") \"nat\"))) (((\"./FA2.py\" 456) set ((\"./FA2.py\" 456) attr ((\"./FA2.py\" 456) get_item ((\"./FA2.py\" 473) attr ((\"ContractFactory.py\" 81) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 452) attr ((\"./FA2.py\" 425) iter \"tx\") \"to_\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 438) attr ((\"./FA2.py\" 425) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"./FA2.py\" 456) add ((\"./FA2.py\" 456) attr ((\"./FA2.py\" 456) get_item ((\"./FA2.py\" 473) attr ((\"ContractFactory.py\" 81) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 452) attr ((\"./FA2.py\" 425) iter \"tx\") \"to_\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 438) attr ((\"./FA2.py\" 425) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"./FA2.py\" 447) attr ((\"./FA2.py\" 425) iter \"tx\") \"amount\"))))) (else_block (((\"./FA2.py\" 458) set ((\"./FA2.py\" 458) get_item ((\"./FA2.py\" 473) attr ((\"ContractFactory.py\" 81) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 452) attr ((\"./FA2.py\" 425) iter \"tx\") \"to_\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 438) attr ((\"./FA2.py\" 425) iter \"tx\") \"token_id\") \"nat\"))) ((\"./FA2.py\" 243) record (balance ((\"./FA2.py\" 447) attr ((\"./FA2.py\" 425) iter \"tx\") \"amount\")))))))) (else_block ()))))))) (update_operators True None None None True None (\"./FA2.py\" 507) (((\"./FA2.py\" 508) set_type ((\"./FA2.py\" 507) params) (list (variant ((add_operator (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"./FA2.py\" 202))) (remove_operator (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"./FA2.py\" 202)))) None (\"./FA2.py\" 509)))) ((\"./FA2.py\" 515) for_group \"update\" ((\"./FA2.py\" 507) params) (((\"./FA2.py\" 516) match_cases ((\"./FA2.py\" 515) iter \"update\") \"match_FA2_516\" (((\"./FA2.py\" 517) match ((\"./FA2.py\" 516) cases_arg \"match_FA2_516\") \"add_operator\" \"add_operator\" (((\"./FA2.py\" 518) verify ((\"./FA2.py\" 519) or ((\"./FA2.py\" 519) eq ((\"./FA2.py\" 519) attr ((\"./FA2.py\" 517) variant_arg \"add_operator\") \"owner\") ((\"\" -1) sender)) ((\"./FA2.py\" 551) eq ((\"\" -1) sender) ((\"./FA2.py\" 551) attr ((\"ContractFactory.py\" 81) data) \"administrator\"))) ((\"./FA2.py\" 518) literal (string \"FA2_NOT_ADMIN_OR_OPERATOR\"))) ((\"./FA2.py\" 282) set ((\"./FA2.py\" 282) get_item ((\"./FA2.py\" 435) attr ((\"ContractFactory.py\" 81) data) \"operators\") ((\"./FA2.py\" 275) type_annotation ((\"./FA2.py\" 272) record (operator ((\"./FA2.py\" 525) attr ((\"./FA2.py\" 517) variant_arg \"add_operator\") \"operator\")) (owner ((\"./FA2.py\" 519) attr ((\"./FA2.py\" 517) variant_arg \"add_operator\") \"owner\")) (token_id ((\"./FA2.py\" 526) attr ((\"./FA2.py\" 517) variant_arg \"add_operator\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"./FA2.py\" 260)))) ((\"\" -1) literal (unit))))) ((\"./FA2.py\" 527) match ((\"./FA2.py\" 516) cases_arg \"match_FA2_516\") \"remove_operator\" \"remove_operator\" (((\"./FA2.py\" 528) verify ((\"./FA2.py\" 529) or ((\"./FA2.py\" 529) eq ((\"./FA2.py\" 529) attr ((\"./FA2.py\" 527) variant_arg \"remove_operator\") \"owner\") ((\"\" -1) sender)) ((\"./FA2.py\" 551) eq ((\"\" -1) sender) ((\"./FA2.py\" 551) attr ((\"ContractFactory.py\" 81) data) \"administrator\"))) ((\"./FA2.py\" 528) literal (string \"FA2_NOT_ADMIN_OR_OPERATOR\"))) ((\"./FA2.py\" 285) del_item ((\"./FA2.py\" 435) attr ((\"ContractFactory.py\" 81) data) \"operators\") ((\"./FA2.py\" 275) type_annotation ((\"./FA2.py\" 272) record (operator ((\"./FA2.py\" 535) attr ((\"./FA2.py\" 527) variant_arg \"remove_operator\") \"operator\")) (owner ((\"./FA2.py\" 529) attr ((\"./FA2.py\" 527) variant_arg \"remove_operator\") \"owner\")) (token_id ((\"./FA2.py\" 536) attr ((\"./FA2.py\" 527) variant_arg \"remove_operator\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"./FA2.py\" 260)))))))))))))\nflags ((initial-cast) (exceptions default-line))\nprivates ()\nviews ((offchain all_tokens False (\"./FA2.py\" 650) True \"\\n            This view is specified (but optional) in the standard.\\n\\n            This contract is built with assume_consecutive_token_ids =\\n            True, so we return a list constructed from the number of tokens.\\n            \" (((\"./FA2.py\" 652) result ((\"./FA2.py\" 652) range ((\"./FA2.py\" 652) literal (intOrNat 0)) ((\"./FA2.py\" 652) attr ((\"ContractFactory.py\" 81) data) \"all_tokens\") ((\"./FA2.py\" 652) literal (intOrNat 1)))))) (offchain count_tokens False (\"./FA2.py\" 638) True \"Get how many tokens are in this FA2 contract.\\n        \" (((\"./FA2.py\" 641) result ((\"./FA2.py\" 641) attr ((\"ContractFactory.py\" 81) data) \"all_tokens\")))) (offchain does_token_exist True (\"./FA2.py\" 644) True \"Ask whether a token ID is exists.\" (((\"./FA2.py\" 646) set_type ((\"./FA2.py\" 644) params) \"nat\") ((\"./FA2.py\" 647) result ((\"./FA2.py\" 647) contains ((\"./FA2.py\" 647) attr ((\"ContractFactory.py\" 81) data) \"token_metadata\") ((\"./FA2.py\" 644) params))))) (offchain get_balance True (\"./FA2.py\" 494) True \"This is the `get_balance` view defined in TZIP-12.\" (((\"./FA2.py\" 496) set_type ((\"./FA2.py\" 494) params) (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"./FA2.py\" 500))) ((\"./FA2.py\" 502) verify ((\"./FA2.py\" 502) contains ((\"./FA2.py\" 502) attr ((\"ContractFactory.py\" 81) data) \"token_metadata\") ((\"./FA2.py\" 501) attr ((\"./FA2.py\" 494) params) \"token_id\")) ((\"./FA2.py\" 502) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"./FA2.py\" 504) result ((\"./FA2.py\" 504) attr ((\"./FA2.py\" 504) get_item ((\"./FA2.py\" 504) attr ((\"ContractFactory.py\" 81) data) \"ledger\") ((\"./FA2.py\" 227) tuple ((\"./FA2.py\" 222) type_annotation ((\"./FA2.py\" 501) attr ((\"./FA2.py\" 494) params) \"owner\") \"address\") ((\"./FA2.py\" 223) type_annotation ((\"./FA2.py\" 501) attr ((\"./FA2.py\" 494) params) \"token_id\") \"nat\"))) \"balance\")))) (offchain is_operator True (\"./FA2.py\" 665) True \"\" (((\"./FA2.py\" 666) set_type ((\"./FA2.py\" 665) params) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"./FA2.py\" 669))) ((\"./FA2.py\" 671) result ((\"./FA2.py\" 288) contains ((\"./FA2.py\" 672) attr ((\"ContractFactory.py\" 81) data) \"operators\") ((\"./FA2.py\" 275) type_annotation ((\"./FA2.py\" 272) record (operator ((\"./FA2.py\" 674) attr ((\"./FA2.py\" 665) params) \"operator\")) (owner ((\"./FA2.py\" 673) attr ((\"./FA2.py\" 665) params) \"owner\")) (token_id ((\"./FA2.py\" 675) attr ((\"./FA2.py\" 665) params) \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"./FA2.py\" 260))))))) (offchain token_metadata True (\"./FA2.py\" 622) True \"Get Token Metadata\" (((\"./FA2.py\" 619) set_type ((\"./FA2.py\" 622) params) \"nat\") ((\"./FA2.py\" 620) result ((\"./FA2.py\" 620) get_item ((\"./FA2.py\" 620) attr ((\"ContractFactory.py\" 81) data) \"token_metadata\") ((\"./FA2.py\" 622) params))))) (offchain total_supply True (\"./FA2.py\" 657) True \"\" (((\"./FA2.py\" 661) set_type ((\"./FA2.py\" 657) params) \"nat\") ((\"./FA2.py\" 662) result ((\"./FA2.py\" 662) literal (string \"total-supply not supported\"))))))\nentry_points_layout ()\ninitial_metadata ((metadata_base (meta_map (\"./FA2.py\" 725) (elem ((\"./FA2.py\" 725) literal (string \"version\")) (meta_expr ((\"./FA2.py\" 725) literal (string \"FA2-nft-no_totsup\")))) (elem ((\"./FA2.py\" 725) literal (string \"description\")) (meta_expr ((\"./FA2.py\" 725) literal (string \"This is a didactic reference implementation of FA2, a.k.a. TZIP-012, using SmartPy.\n\nThis particular contract uses the configuration named: FA2-nft-no_totsup.\")))) (elem ((\"./FA2.py\" 725) literal (string \"interfaces\")) (meta_list (\"./FA2.py\" 725) (meta_expr ((\"./FA2.py\" 725) literal (string \"TZIP-012\"))) (meta_expr ((\"./FA2.py\" 725) literal (string \"TZIP-016\"))))) (elem ((\"./FA2.py\" 725) literal (string \"authors\")) (meta_list (\"./FA2.py\" 725) (meta_expr ((\"./FA2.py\" 725) literal (string \"Seb Mondet <https://seb.mondet.org>\"))))) (elem ((\"./FA2.py\" 725) literal (string \"homepage\")) (meta_expr ((\"./FA2.py\" 725) literal (string \"https://gitlab.com/smondet/fa2-smartpy\")))) (elem ((\"./FA2.py\" 725) literal (string \"views\")) (meta_list (\"./FA2.py\" 725) (meta_view \"get_balance\" (\"./FA2.py\" 494)) (meta_view \"does_token_exist\" (\"./FA2.py\" 644)) (meta_view \"count_tokens\" (\"./FA2.py\" 638)) (meta_view \"all_tokens\" (\"./FA2.py\" 650)) (meta_view \"is_operator\" (\"./FA2.py\" 665)) (meta_view \"token_metadata\" (\"./FA2.py\" 622)))) (elem ((\"./FA2.py\" 725) literal (string \"source\")) (meta_map (\"./FA2.py\" 725) (elem ((\"./FA2.py\" 725) literal (string \"tools\")) (meta_list (\"./FA2.py\" 725) (meta_expr ((\"./FA2.py\" 725) literal (string \"SmartPy\"))))) (elem ((\"./FA2.py\" 725) literal (string \"location\")) (meta_expr ((\"./FA2.py\" 725) literal (string \"https://gitlab.com/smondet/fa2-smartpy.git\")))))) (elem ((\"./FA2.py\" 725) literal (string \"permissions\")) (meta_map (\"./FA2.py\" 725) (elem ((\"./FA2.py\" 725) literal (string \"operator\")) (meta_expr ((\"./FA2.py\" 725) literal (string \"owner-or-operator-transfer\")))) (elem ((\"./FA2.py\" 725) literal (string \"receiver\")) (meta_expr ((\"./FA2.py\" 725) literal (string \"owner-no-hook\")))) (elem ((\"./FA2.py\" 725) literal (string \"sender\")) (meta_expr ((\"./FA2.py\" 725) literal (string \"owner-no-hook\")))))) (elem ((\"./FA2.py\" 725) literal (string \"fa2-smartpy\")) (meta_map (\"./FA2.py\" 725) (elem ((\"./FA2.py\" 725) literal (string \"configuration\")) (meta_map (\"./FA2.py\" 725) (elem ((\"./FA2.py\" 725) literal (string \"add_mutez_transfer\")) (meta_expr ((\"./FA2.py\" 725) literal (bool False)))) (elem ((\"./FA2.py\" 725) literal (string \"allow_self_transfer\")) (meta_expr ((\"./FA2.py\" 725) literal (bool False)))) (elem ((\"./FA2.py\" 725) literal (string \"assume_consecutive_token_ids\")) (meta_expr ((\"./FA2.py\" 725) literal (bool True)))) (elem ((\"./FA2.py\" 725) literal (string \"force_layouts\")) (meta_expr ((\"./FA2.py\" 725) literal (bool True)))) (elem ((\"./FA2.py\" 725) literal (string \"lazy_entry_points\")) (meta_expr ((\"./FA2.py\" 725) literal (bool False)))) (elem ((\"./FA2.py\" 725) literal (string \"name\")) (meta_expr ((\"./FA2.py\" 725) literal (string \"FA2-nft-no_totsup\")))) (elem ((\"./FA2.py\" 725) literal (string \"non_fungible\")) (meta_expr ((\"./FA2.py\" 725) literal (bool True)))) (elem ((\"./FA2.py\" 725) literal (string \"readable\")) (meta_expr ((\"./FA2.py\" 725) literal (bool True)))) (elem ((\"./FA2.py\" 725) literal (string \"single_asset\")) (meta_expr ((\"./FA2.py\" 725) literal (bool False)))) (elem ((\"./FA2.py\" 725) literal (string \"store_total_supply\")) (meta_expr ((\"./FA2.py\" 725) literal (bool False)))) (elem ((\"./FA2.py\" 725) literal (string \"support_operator\")) (meta_expr ((\"./FA2.py\" 725) literal (bool True)))) (elem ((\"./FA2.py\" 725) literal (string \"use_token_metadata_offchain_view\")) (meta_expr ((\"./FA2.py\" 725) literal (bool True)))))))))))\nbalance ())) (storage ((\"./FA2.py\" 404) record (administrator ((\"\" -1) self_address)) (all_tokens ((\"./FA2.py\" 335) literal (nat 0))) (ledger ((\"./FA2.py\" 405) type_annotation ((\"./FA2.py\" 405) big_map ) (bigmap (unknown 7) (record ((balance \"nat\")) None (\"./FA2.py\" 240))))) (metadata ((\"ContractFactory.py\" 42) params)) (operators ((\"./FA2.py\" 269) type_annotation ((\"./FA2.py\" 269) big_map ) (bigmap (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"./FA2.py\" 260)) \"unit\"))) (paused ((\"./FA2.py\" 404) literal (bool False))) (token_metadata ((\"./FA2.py\" 406) type_annotation ((\"./FA2.py\" 406) big_map ) (bigmap \"nat\" (record ((token_id \"nat\") (token_info (map \"string\" \"bytes\"))) None (\"./FA2.py\" 315))))))) (baker None) (amount ((\"ContractFactory.py\" 1) literal (mutez 0)))) True) ((\"ContractFactory.py\" 43) set ((\"ContractFactory.py\" 43) operations) ((\"ContractFactory.py\" 43) cons ((\"ContractFactory.py\" 43) attr ((\"ContractFactory.py\" 43) get_local \"create_contract_ContractFactory_43\") \"operation\") ((\"ContractFactory.py\" 43) operations))) ((\"ContractFactory.py\" 50) if_block ((\"ContractFactory.py\" 50) contains ((\"ContractFactory.py\" 50) attr ((\"ContractFactory.py\" 81) data) \"contracts\") ((\"\" -1) sender)) (((\"ContractFactory.py\" 51) set ((\"ContractFactory.py\" 51) get_item ((\"ContractFactory.py\" 50) attr ((\"ContractFactory.py\" 81) data) \"contracts\") ((\"\" -1) sender)) ((\"ContractFactory.py\" 51) cons ((\"ContractFactory.py\" 43) attr ((\"ContractFactory.py\" 43) get_local \"create_contract_ContractFactory_43\") \"address\") ((\"ContractFactory.py\" 51) get_item ((\"ContractFactory.py\" 50) attr ((\"ContractFactory.py\" 81) data) \"contracts\") ((\"\" -1) sender)))))) (else_block (((\"ContractFactory.py\" 53) set ((\"ContractFactory.py\" 53) get_item ((\"ContractFactory.py\" 50) attr ((\"ContractFactory.py\" 81) data) \"contracts\") ((\"\" -1) sender)) ((\"ContractFactory.py\" 53) list ((\"ContractFactory.py\" 43) attr ((\"ContractFactory.py\" 43) get_local \"create_contract_ContractFactory_43\") \"address\"))))) ((\"ContractFactory.py\" 54) set ((\"ContractFactory.py\" 54) operations) ((\"ContractFactory.py\" 54) cons ((\"ContractFactory.py\" 54) emit \"CONTRACT_DEPLOYED\" \"True\" ((\"ContractFactory.py\" 54) record (contract_address ((\"ContractFactory.py\" 43) attr ((\"ContractFactory.py\" 43) get_local \"create_contract_ContractFactory_43\") \"address\")) (deployed_by ((\"\" -1) sender)) (event ((\"ContractFactory.py\" 54) literal (string \"CONTRACT_DEPLOYED\"))))) ((\"ContractFactory.py\" 54) operations))))) (mint_token True None None None True None (\"ContractFactory.py\" 58) (((\"ContractFactory.py\" 59) set_type ((\"ContractFactory.py\" 81) attr ((\"ContractFactory.py\" 58) params) \"contract\") \"address\") ((\"ContractFactory.py\" 60) set_type ((\"ContractFactory.py\" 81) attr ((\"ContractFactory.py\" 58) params) \"amount\") \"nat\") ((\"ContractFactory.py\" 61) set_type ((\"ContractFactory.py\" 81) attr ((\"ContractFactory.py\" 58) params) \"token_id\") \"nat\") ((\"ContractFactory.py\" 62) set_type ((\"ContractFactory.py\" 81) attr ((\"ContractFactory.py\" 58) params) \"metadata\") (map \"string\" \"bytes\")) ((\"ContractFactory.py\" 63) for_group \"addr\" ((\"ContractFactory.py\" 63) get_item ((\"ContractFactory.py\" 50) attr ((\"ContractFactory.py\" 81) data) \"contracts\") ((\"\" -1) sender)) (((\"ContractFactory.py\" 64) if_block ((\"ContractFactory.py\" 64) eq ((\"ContractFactory.py\" 63) iter \"addr\") ((\"ContractFactory.py\" 81) attr ((\"ContractFactory.py\" 58) params) \"contract\")) (((\"ContractFactory.py\" 67) set ((\"ContractFactory.py\" 67) operations) ((\"ContractFactory.py\" 67) cons ((\"ContractFactory.py\" 67) transfer ((\"ContractFactory.py\" 66) record (address ((\"\" -1) sender)) (amount ((\"ContractFactory.py\" 81) attr ((\"ContractFactory.py\" 58) params) \"amount\")) (metadata ((\"ContractFactory.py\" 81) attr ((\"ContractFactory.py\" 58) params) \"metadata\")) (token_id ((\"ContractFactory.py\" 81) attr ((\"ContractFactory.py\" 58) params) \"token_id\"))) ((\"ContractFactory.py\" 67) literal (mutez 0)) ((\"ContractFactory.py\" 65) open_variant ((\"ContractFactory.py\" 65) contract \"mint\" (record ((address \"address\") (amount \"nat\") (metadata (map \"string\" \"bytes\")) (token_id \"nat\")) None (\"ContractFactory.py\" 65)) ((\"ContractFactory.py\" 81) attr ((\"ContractFactory.py\" 58) params) \"contract\")) \"Some\" \"None\")) ((\"ContractFactory.py\" 67) operations))) ((\"ContractFactory.py\" 68) set ((\"ContractFactory.py\" 68) operations) ((\"ContractFactory.py\" 68) cons ((\"ContractFactory.py\" 68) emit \"TOKEN_MINTED\" \"True\" ((\"ContractFactory.py\" 68) record (amount ((\"ContractFactory.py\" 81) attr ((\"ContractFactory.py\" 58) params) \"amount\")) (event ((\"ContractFactory.py\" 68) literal (string \"TOKEN_MINTED\"))) (minted_by ((\"\" -1) sender)))) ((\"ContractFactory.py\" 68) operations))))))))))\nflags ()\nprivates ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())",
    "id": "((\"ContractFactory.py\" 81) static_id 0)",
    "line_no": "(\"ContractFactory.py\" 81)",
    "show": true
   },
   {
    "action": "message",
    "id": "((\"ContractFactory.py\" 81) static_id 0)",
    "line_no": "(\"ContractFactory.py\" 82)",
    "message": "deploy_fa2",
    "params": "((\"ContractFactory.py\" 82) big_map (((\"ContractFactory.py\" 82) literal (string \"\")) ((\"ContractFactory.py\" 82) literal (bytes \"0x68747470733a2f2f6578616d706c65312e636f6d\"))))",
    "sender": "((\"ContractFactory.py\" 75) resolve ((\"ContractFactory.py\" 75) attr ((\"ContractFactory.py\" 75) account_of_seed \"Admin\") \"address\"))"
   }
  ],
  "kind": "test"
 }
]