Comment...
 h1: FA2 Contract Name: FA2-nft-no_totsup
Table Of Contents

 FA2 Contract Name: FA2-nft-no_totsup
# Accounts
# Initial Minting
# Transfers Alice -> Bob
# More Token Types
# Other Basic Permission Tests
## Bob cannot transfer Alice's tokens.
## Admin can transfer anything.
## Even Admin cannot transfer too much.
## Consumer Contract for Callback Calls.
# Balance-of.
# Operators
## Operator Accounts
Comment...
 h2: Accounts
Computing sp.list([sp.test_account("Administrator"), sp.test_account("Alice"), sp.test_account("Robert")])...
 => [sp.record(seed = 'Administrator', address = sp.address('tz1hdQscorfqMzFqYxnrApuS5i6QSTuoAp3w'), public_key = sp.key('edpktzrjdb1tx6dQecQGZL6CwhujWg1D2CXfXWBriqtJSA6kvqMwA2'), public_key_hash = sp.key_hash('tz1hdQscorfqMzFqYxnrApuS5i6QSTuoAp3w'), secret_key = sp.secret_key('edskRqFp3Z9AqoKrMNFb9bnWNwEsRzbjqjBhzmFMLF9UqB6VBmw7F8ppTiXaAnHtysmi6xFxoHf6rMUz6Y1ipiDz2EgwZQv3pa')), sp.record(seed = 'Alice', address = sp.address('tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi'), public_key = sp.key('edpkuvNy6TuQ2z8o9wnoaTtTXkzQk7nhegCHfxBc4ecsd4qG71KYNG'), public_key_hash = sp.key_hash('tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi'), secret_key = sp.secret_key('edskRijgcXx8gzqkq7SCBbrb6aDZQMmP6dznCQWgU1Jr4qPfJT1yFq5A39ja9G4wahS8uWtBurZy14Hy7GZkQh7WnopJTKtCQG')), sp.record(seed = 'Robert', address = sp.address('tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP'), public_key = sp.key('edpkvThfdv8Efh1MuqSTUk5EnUFCTjqN6kXDCNXpQ8udN3cKRhNDr2'), public_key_hash = sp.key_hash('tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP'), secret_key = sp.secret_key('edskRiaffUWqB9zgaEhuX6EmejbLzk2xcpSEXLv3G4cDfcbY75c71ASyGnFHXuaTAVMPt2bJLGGye1gm24oBmAc2k5VDHHo5Ua'))]
Creating contract KT1TezoooozzSmartPyzzSTATiCzzzwwBFA1
 -> (Pair (Pair "tz1hdQscorfqMzFqYxnrApuS5i6QSTuoAp3w" (Pair 0 {})) (Pair (Pair {Elt "" 0x68747470733a2f2f6578616d706c652e636f6d} {}) (Pair False {})))
 => ./output/ContractFactory/FA2-nft-no_totsup/step_004_cont_0_storage.tz 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_004_cont_0_storage.json 13
 => ./output/ContractFactory/FA2-nft-no_totsup/step_004_cont_0_sizes.csv 2
 => ./output/ContractFactory/FA2-nft-no_totsup/step_004_cont_0_storage.py 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_004_cont_0_types.py 7
 => ./output/ContractFactory/FA2-nft-no_totsup/step_004_cont_0_metadata.metadata_base.json 185
 => ./output/ContractFactory/FA2-nft-no_totsup/step_004_cont_0_contract.tz 734
 => ./output/ContractFactory/FA2-nft-no_totsup/step_004_cont_0_contract.json 1004
 => ./output/ContractFactory/FA2-nft-no_totsup/step_004_cont_0_contract.py 83
 => ./output/ContractFactory/FA2-nft-no_totsup/step_004_cont_0_contract.py.html 2190
Comment...
 h2: Initial Minting
Comment...
 p: The administrator mints 100 token-0's to Alice.
 => ./output/ContractFactory/FA2-nft-no_totsup/step_007_cont_0_params.py 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_007_cont_0_params.tz 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_007_cont_0_params.json 23
Executing mint(sp.record(address = sp.resolve(sp.test_account("Alice").address), amount = 50, metadata = {'' : sp.bytes('0x68747470733a2f2f697066732e696f2f697066732f626166797265696173376b7a3272796b7475333461667177683536706c746d333275787365636178736f6f746b6c776c7371757735676e337074712f6d657461646174612e6a736f6e2f')}, token_id = 0))...
 -> (Pair (Pair "tz1hdQscorfqMzFqYxnrApuS5i6QSTuoAp3w" (Pair 1 {Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 0) 50})) (Pair (Pair {Elt "" 0x68747470733a2f2f6578616d706c652e636f6d} {}) (Pair False {Elt 0 (Pair 0 {Elt "" 0x68747470733a2f2f697066732e696f2f697066732f626166797265696173376b7a3272796b7475333461667177683536706c746d333275787365636178736f6f746b6c776c7371757735676e337074712f6d657461646174612e6a736f6e2f})})))
 => ./output/ContractFactory/FA2-nft-no_totsup/step_008_cont_0_params.py 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_008_cont_0_params.tz 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_008_cont_0_params.json 17
Executing mint(sp.record(address = sp.resolve(sp.test_account("Alice").address), amount = 50, metadata = {'decimals' : sp.bytes('0x32'), 'name' : sp.bytes('0x54686520546f6b656e205a65726f'), 'symbol' : sp.bytes('0x544b30')}, token_id = 1))...
 -> (Pair (Pair "tz1hdQscorfqMzFqYxnrApuS5i6QSTuoAp3w" (Pair 2 {Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 0) 50; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 1) 50})) (Pair (Pair {Elt "" 0x68747470733a2f2f6578616d706c652e636f6d} {}) (Pair False {Elt 0 (Pair 0 {Elt "" 0x68747470733a2f2f697066732e696f2f697066732f626166797265696173376b7a3272796b7475333461667177683536706c746d333275787365636178736f6f746b6c776c7371757735676e337074712f6d657461646174612e6a736f6e2f}); Elt 1 (Pair 1 {Elt "decimals" 0x32; Elt "name" 0x54686520546f6b656e205a65726f; Elt "symbol" 0x544b30})})))
Comment...
 h2: Transfers Alice -> Bob
 => ./output/ContractFactory/FA2-nft-no_totsup/step_010_cont_0_params.py 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_010_cont_0_params.tz 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_010_cont_0_params.json 9
Executing transfer(sp.list([sp.set_type_expr(sp.record(from_ = sp.resolve(sp.test_account("Alice").address), txs = sp.list([sp.record(to_ = sp.resolve(sp.test_account("Robert").address), token_id = 0, amount = 10)])), sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs")))]))...
 -> (Pair (Pair "tz1hdQscorfqMzFqYxnrApuS5i6QSTuoAp3w" (Pair 2 {Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 0) 10; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 0) 40; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 1) 50})) (Pair (Pair {Elt "" 0x68747470733a2f2f6578616d706c652e636f6d} {}) (Pair False {Elt 0 (Pair 0 {Elt "" 0x68747470733a2f2f697066732e696f2f697066732f626166797265696173376b7a3272796b7475333461667177683536706c746d333275787365636178736f6f746b6c776c7371757735676e337074712f6d657461646174612e6a736f6e2f}); Elt 1 (Pair 1 {Elt "decimals" 0x32; Elt "name" 0x54686520546f6b656e205a65726f; Elt "symbol" 0x544b30})})))
Verifying sp.contract_data(0).ledger[(sp.set_type_expr(sp.resolve(sp.test_account("Alice").address), sp.TAddress), sp.set_type_expr(0, sp.TNat))].balance == 40...
 OK
Verifying sp.contract_data(0).ledger[(sp.set_type_expr(sp.resolve(sp.test_account("Robert").address), sp.TAddress), sp.set_type_expr(0, sp.TNat))].balance == 10...
 OK
 => ./output/ContractFactory/FA2-nft-no_totsup/step_013_cont_0_params.py 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_013_cont_0_params.tz 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_013_cont_0_params.json 12
Executing transfer(sp.list([sp.set_type_expr(sp.record(from_ = sp.resolve(sp.test_account("Alice").address), txs = sp.list([sp.record(to_ = sp.resolve(sp.test_account("Robert").address), token_id = 0, amount = 10), sp.record(to_ = sp.resolve(sp.test_account("Robert").address), token_id = 0, amount = 11)])), sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs")))]))...
 -> (Pair (Pair "tz1hdQscorfqMzFqYxnrApuS5i6QSTuoAp3w" (Pair 2 {Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 0) 31; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 0) 19; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 1) 50})) (Pair (Pair {Elt "" 0x68747470733a2f2f6578616d706c652e636f6d} {}) (Pair False {Elt 0 (Pair 0 {Elt "" 0x68747470733a2f2f697066732e696f2f697066732f626166797265696173376b7a3272796b7475333461667177683536706c746d333275787365636178736f6f746b6c776c7371757735676e337074712f6d657461646174612e6a736f6e2f}); Elt 1 (Pair 1 {Elt "decimals" 0x32; Elt "name" 0x54686520546f6b656e205a65726f; Elt "symbol" 0x544b30})})))
Verifying sp.contract_data(0).ledger[(sp.set_type_expr(sp.resolve(sp.test_account("Alice").address), sp.TAddress), sp.set_type_expr(0, sp.TNat))].balance == 19...
 OK
Verifying sp.contract_data(0).ledger[(sp.set_type_expr(sp.resolve(sp.test_account("Robert").address), sp.TAddress), sp.set_type_expr(0, sp.TNat))].balance == 31...
 OK
Comment...
 h2: More Token Types
 => ./output/ContractFactory/FA2-nft-no_totsup/step_017_cont_0_params.py 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_017_cont_0_params.tz 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_017_cont_0_params.json 17
Executing mint(sp.record(address = sp.resolve(sp.test_account("Robert").address), amount = 100, metadata = {'decimals' : sp.bytes('0x30'), 'name' : sp.bytes('0x546865205365636f6e6420546f6b656e'), 'symbol' : sp.bytes('0x544b31')}, token_id = 2))...
 -> (Pair (Pair "tz1hdQscorfqMzFqYxnrApuS5i6QSTuoAp3w" (Pair 3 {Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 0) 31; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 2) 100; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 0) 19; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 1) 50})) (Pair (Pair {Elt "" 0x68747470733a2f2f6578616d706c652e636f6d} {}) (Pair False {Elt 0 (Pair 0 {Elt "" 0x68747470733a2f2f697066732e696f2f697066732f626166797265696173376b7a3272796b7475333461667177683536706c746d333275787365636178736f6f746b6c776c7371757735676e337074712f6d657461646174612e6a736f6e2f}); Elt 1 (Pair 1 {Elt "decimals" 0x32; Elt "name" 0x54686520546f6b656e205a65726f; Elt "symbol" 0x544b30}); Elt 2 (Pair 2 {Elt "decimals" 0x30; Elt "name" 0x546865205365636f6e6420546f6b656e; Elt "symbol" 0x544b31})})))
 => ./output/ContractFactory/FA2-nft-no_totsup/step_018_cont_0_params.py 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_018_cont_0_params.tz 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_018_cont_0_params.json 17
Executing mint(sp.record(address = sp.resolve(sp.test_account("Robert").address), amount = 200, metadata = {'decimals' : sp.bytes('0x30'), 'name' : sp.bytes('0x54686520546f6b656e204e756d626572205468726565'), 'symbol' : sp.bytes('0x544b32')}, token_id = 3))...
 -> (Pair (Pair "tz1hdQscorfqMzFqYxnrApuS5i6QSTuoAp3w" (Pair 4 {Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 0) 31; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 2) 100; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 3) 200; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 0) 19; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 1) 50})) (Pair (Pair {Elt "" 0x68747470733a2f2f6578616d706c652e636f6d} {}) (Pair False {Elt 0 (Pair 0 {Elt "" 0x68747470733a2f2f697066732e696f2f697066732f626166797265696173376b7a3272796b7475333461667177683536706c746d333275787365636178736f6f746b6c776c7371757735676e337074712f6d657461646174612e6a736f6e2f}); Elt 1 (Pair 1 {Elt "decimals" 0x32; Elt "name" 0x54686520546f6b656e205a65726f; Elt "symbol" 0x544b30}); Elt 2 (Pair 2 {Elt "decimals" 0x30; Elt "name" 0x546865205365636f6e6420546f6b656e; Elt "symbol" 0x544b31}); Elt 3 (Pair 3 {Elt "decimals" 0x30; Elt "name" 0x54686520546f6b656e204e756d626572205468726565; Elt "symbol" 0x544b32})})))
Comment...
 h2: Other Basic Permission Tests
Comment...
 h3: Bob cannot transfer Alice's tokens.
 => ./output/ContractFactory/FA2-nft-no_totsup/step_021_cont_0_params.py 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_021_cont_0_params.tz 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_021_cont_0_params.json 12
Executing transfer(sp.list([sp.set_type_expr(sp.record(from_ = sp.resolve(sp.test_account("Alice").address), txs = sp.list([sp.record(to_ = sp.resolve(sp.test_account("Robert").address), token_id = 0, amount = 10), sp.record(to_ = sp.resolve(sp.test_account("Robert").address), token_id = 0, amount = 1)])), sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs")))]))...
 -> --- Expected failure in transaction --- Wrong condition: (((sp.sender == self.data.administrator) | (transfer.from_ == sp.sender)) | (self.data.operators.contains(sp.set_type_expr(sp.record(owner = transfer.from_, operator = sp.sender, token_id = tx.token_id), sp.TRecord(operator = sp.TAddress, owner = sp.TAddress, token_id = sp.TNat).layout(("owner", ("operator", "token_id")))))) : sp.TBool) (./FA2.py, line 435)
Message: 'FA2_NOT_OPERATOR'
 (./FA2.py, line 441)
Comment...
 h3: Admin can transfer anything.
 => ./output/ContractFactory/FA2-nft-no_totsup/step_023_cont_0_params.py 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_023_cont_0_params.tz 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_023_cont_0_params.json 19
Executing transfer(sp.list([sp.set_type_expr(sp.record(from_ = sp.resolve(sp.test_account("Alice").address), txs = sp.list([sp.record(to_ = sp.resolve(sp.test_account("Robert").address), token_id = 0, amount = 10), sp.record(to_ = sp.resolve(sp.test_account("Robert").address), token_id = 1, amount = 10)])), sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs"))), sp.set_type_expr(sp.record(from_ = sp.resolve(sp.test_account("Robert").address), txs = sp.list([sp.record(to_ = sp.resolve(sp.test_account("Alice").address), token_id = 0, amount = 11)])), sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs")))]))...
 -> (Pair (Pair "tz1hdQscorfqMzFqYxnrApuS5i6QSTuoAp3w" (Pair 4 {Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 0) 30; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 1) 10; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 2) 100; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 3) 200; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 0) 20; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 1) 40})) (Pair (Pair {Elt "" 0x68747470733a2f2f6578616d706c652e636f6d} {}) (Pair False {Elt 0 (Pair 0 {Elt "" 0x68747470733a2f2f697066732e696f2f697066732f626166797265696173376b7a3272796b7475333461667177683536706c746d333275787365636178736f6f746b6c776c7371757735676e337074712f6d657461646174612e6a736f6e2f}); Elt 1 (Pair 1 {Elt "decimals" 0x32; Elt "name" 0x54686520546f6b656e205a65726f; Elt "symbol" 0x544b30}); Elt 2 (Pair 2 {Elt "decimals" 0x30; Elt "name" 0x546865205365636f6e6420546f6b656e; Elt "symbol" 0x544b31}); Elt 3 (Pair 3 {Elt "decimals" 0x30; Elt "name" 0x54686520546f6b656e204e756d626572205468726565; Elt "symbol" 0x544b32})})))
Comment...
 h3: Even Admin cannot transfer too much.
 => ./output/ContractFactory/FA2-nft-no_totsup/step_025_cont_0_params.py 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_025_cont_0_params.tz 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_025_cont_0_params.json 9
Executing transfer(sp.list([sp.set_type_expr(sp.record(from_ = sp.resolve(sp.test_account("Alice").address), txs = sp.list([sp.record(to_ = sp.resolve(sp.test_account("Robert").address), token_id = 0, amount = 1000)])), sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs")))]))...
 -> --- Expected failure in transaction --- Wrong condition: (self.data.ledger[(sp.set_type_expr(transfer.from_, sp.TAddress), sp.set_type_expr(tx.token_id, sp.TNat))].balance >= tx.amount : sp.TBool) (./FA2.py, line 450)
Message: 'FA2_INSUFFICIENT_BALANCE'
 (./FA2.py, line 449)
Comment...
 h3: Consumer Contract for Callback Calls.
Creating contract KT1Tezooo1zzSmartPyzzSTATiCzzzyfC8eF
 -> (Pair 0 False)
 => ./output/ContractFactory/FA2-nft-no_totsup/step_027_cont_1_storage.tz 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_027_cont_1_storage.json 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_027_cont_1_sizes.csv 2
 => ./output/ContractFactory/FA2-nft-no_totsup/step_027_cont_1_storage.py 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_027_cont_1_types.py 7
 => ./output/ContractFactory/FA2-nft-no_totsup/step_027_cont_1_contract.tz 39
 => ./output/ContractFactory/FA2-nft-no_totsup/step_027_cont_1_contract.json 66
 => ./output/ContractFactory/FA2-nft-no_totsup/step_027_cont_1_contract.py 20
 => ./output/ContractFactory/FA2-nft-no_totsup/step_027_cont_1_contract.py.html 2127
Comment...
 p: Consumer virtual address: (("./FA2.py" 910) contract_address (("./FA2.py" 910) static_id 1) "")
Comment...
 h2: Balance-of.
 => ./output/ContractFactory/FA2-nft-no_totsup/step_030_cont_0_params.py 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_030_cont_0_params.tz 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_030_cont_0_params.json 11
Executing balance_of(sp.record(requests = sp.list([sp.record(owner = sp.resolve(sp.test_account("Alice").address), token_id = 0), sp.record(owner = sp.resolve(sp.test_account("Alice").address), token_id = 1), sp.record(owner = sp.resolve(sp.test_account("Alice").address), token_id = 2)]), callback = sp.contract(sp.TList(sp.TRecord(balance = sp.TNat, request = sp.TRecord(owner = sp.TAddress, token_id = sp.TNat).layout(("owner", "token_id"))).layout(("request", "balance"))), sp.address('KT1Tezooo1zzSmartPyzzSTATiCzzzyfC8eF'), entry_point='receive_balances').open_some()))...
 -> (Pair (Pair "tz1hdQscorfqMzFqYxnrApuS5i6QSTuoAp3w" (Pair 4 {Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 0) 30; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 1) 10; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 2) 100; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 3) 200; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 0) 20; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 1) 40})) (Pair (Pair {Elt "" 0x68747470733a2f2f6578616d706c652e636f6d} {}) (Pair False {Elt 0 (Pair 0 {Elt "" 0x68747470733a2f2f697066732e696f2f697066732f626166797265696173376b7a3272796b7475333461667177683536706c746d333275787365636178736f6f746b6c776c7371757735676e337074712f6d657461646174612e6a736f6e2f}); Elt 1 (Pair 1 {Elt "decimals" 0x32; Elt "name" 0x54686520546f6b656e205a65726f; Elt "symbol" 0x544b30}); Elt 2 (Pair 2 {Elt "decimals" 0x30; Elt "name" 0x546865205365636f6e6420546f6b656e; Elt "symbol" 0x544b31}); Elt 3 (Pair 3 {Elt "decimals" 0x30; Elt "name" 0x54686520546f6b656e204e756d626572205468726565; Elt "symbol" 0x544b32})})))
  + Transfer
     params: [sp.record(request = sp.record(owner = sp.address('tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi'), token_id = 0), balance = 20), sp.record(request = sp.record(owner = sp.address('tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi'), token_id = 1), balance = 40), sp.record(request = sp.record(owner = sp.address('tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi'), token_id = 2), balance = 0)]
     amount: sp.tez(0)
     to:     sp.contract(sp.TList(sp.TRecord(balance = sp.TNat, request = sp.TRecord(owner = sp.TAddress, token_id = sp.TNat).layout(("owner", "token_id"))).layout(("request", "balance"))), sp.address('KT1Tezooo1zzSmartPyzzSTATiCzzzyfC8eF%receive_balances')).open_some()
Executing (queue) receive_balances([sp.record(request = sp.record(owner = sp.address('tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi'), token_id = 0), balance = 20), sp.record(request = sp.record(owner = sp.address('tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi'), token_id = 1), balance = 40), sp.record(request = sp.record(owner = sp.address('tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi'), token_id = 2), balance = 0)])...
 -> (Pair 60 False)
Comment...
 h2: Operators
Comment...
 p: This version was compiled with operator support.
Comment...
 p: Calling 0 updates should work:
 => ./output/ContractFactory/FA2-nft-no_totsup/step_034_cont_0_params.py 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_034_cont_0_params.tz 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_034_cont_0_params.json 1
Executing update_operators(sp.list([]))...
 -> (Pair (Pair "tz1hdQscorfqMzFqYxnrApuS5i6QSTuoAp3w" (Pair 4 {Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 0) 30; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 1) 10; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 2) 100; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 3) 200; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 0) 20; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 1) 40})) (Pair (Pair {Elt "" 0x68747470733a2f2f6578616d706c652e636f6d} {}) (Pair False {Elt 0 (Pair 0 {Elt "" 0x68747470733a2f2f697066732e696f2f697066732f626166797265696173376b7a3272796b7475333461667177683536706c746d333275787365636178736f6f746b6c776c7371757735676e337074712f6d657461646174612e6a736f6e2f}); Elt 1 (Pair 1 {Elt "decimals" 0x32; Elt "name" 0x54686520546f6b656e205a65726f; Elt "symbol" 0x544b30}); Elt 2 (Pair 2 {Elt "decimals" 0x30; Elt "name" 0x546865205365636f6e6420546f6b656e; Elt "symbol" 0x544b31}); Elt 3 (Pair 3 {Elt "decimals" 0x30; Elt "name" 0x54686520546f6b656e204e756d626572205468726565; Elt "symbol" 0x544b32})})))
Comment...
 h3: Operator Accounts
Computing sp.list([sp.test_account("Operator0"), sp.test_account("Operator1"), sp.test_account("Operator2")])...
 => [sp.record(seed = 'Operator0', address = sp.address('tz1YwWQ4mN5bERtawS7md846BTZSTpTFAt6u'), public_key = sp.key('edpktgzCRsZfj6uXH15LD2XwkArxWwvmNnNTF6eDjdPfqUKyveoaer'), public_key_hash = sp.key_hash('tz1YwWQ4mN5bERtawS7md846BTZSTpTFAt6u'), secret_key = sp.secret_key('edskRqFqUWpPyaeb5QYo1fJinRTNVZS9kmCFK4P6k94pVVK1LCDMZCoX8jRw3DQnVBvnMdjGK8FnRsG7DQAoEDTsrRHL65jDWQ')), sp.record(seed = 'Operator1', address = sp.address('tz1Yy7DNgpD9Y34mW8jkYaXG4qfBqdSW72Gw'), public_key = sp.key('edpkvZLUVyNYCrPdbXB19TFRRsHe7ts9NcSTQ2QEBJYkQb7dTBJBTK'), public_key_hash = sp.key_hash('tz1Yy7DNgpD9Y34mW8jkYaXG4qfBqdSW72Gw'), secret_key = sp.secret_key('edskRprqNGi82LhYyVYf3m4yAydKjKed5L9Cnyn8hRUfP3g6tWU9ap3vbhSjRdvNoJjHFAc8NwY4dy2prWDPPewmHFjML7qYEE')), sp.record(seed = 'Operator2', address = sp.address('tz1XJSgPn4RXytGaaitxWVrsT9EdgR2atrRd'), public_key = sp.key('edpkuX5bR26yFgNy26YTZUHKQqouqM51ebSYUZyVqF7q9ZM8DgL6fP'), public_key_hash = sp.key_hash('tz1XJSgPn4RXytGaaitxWVrsT9EdgR2atrRd'), secret_key = sp.secret_key('edskRiUdGGTzaYHNWxmHnF1VicJbcBx8sqjAKnFfxLUgvaDzqk8jx3AW6WK2HGtLZW6YBFwK1T33eZn95qPuzU45j1CH86UVwK'))]
Comment...
 p: Admin can change Alice's operator.
 => ./output/ContractFactory/FA2-nft-no_totsup/step_038_cont_0_params.py 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_038_cont_0_params.tz 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_038_cont_0_params.json 20
Executing update_operators(sp.list([variant('add_operator', sp.set_type_expr(sp.record(owner = sp.resolve(sp.test_account("Alice").address), operator = sp.resolve(sp.test_account("Operator1").address), token_id = 0), sp.TRecord(operator = sp.TAddress, owner = sp.TAddress, token_id = sp.TNat).layout(("owner", ("operator", "token_id"))))), variant('add_operator', sp.set_type_expr(sp.record(owner = sp.resolve(sp.test_account("Alice").address), operator = sp.resolve(sp.test_account("Operator1").address), token_id = 2), sp.TRecord(operator = sp.TAddress, owner = sp.TAddress, token_id = sp.TNat).layout(("owner", ("operator", "token_id")))))]))...
 -> (Pair (Pair "tz1hdQscorfqMzFqYxnrApuS5i6QSTuoAp3w" (Pair 4 {Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 0) 30; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 1) 10; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 2) 100; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 3) 200; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 0) 20; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 1) 40})) (Pair (Pair {Elt "" 0x68747470733a2f2f6578616d706c652e636f6d} {Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair "tz1Yy7DNgpD9Y34mW8jkYaXG4qfBqdSW72Gw" 0)) Unit; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair "tz1Yy7DNgpD9Y34mW8jkYaXG4qfBqdSW72Gw" 2)) Unit}) (Pair False {Elt 0 (Pair 0 {Elt "" 0x68747470733a2f2f697066732e696f2f697066732f626166797265696173376b7a3272796b7475333461667177683536706c746d333275787365636178736f6f746b6c776c7371757735676e337074712f6d657461646174612e6a736f6e2f}); Elt 1 (Pair 1 {Elt "decimals" 0x32; Elt "name" 0x54686520546f6b656e205a65726f; Elt "symbol" 0x544b30}); Elt 2 (Pair 2 {Elt "decimals" 0x30; Elt "name" 0x546865205365636f6e6420546f6b656e; Elt "symbol" 0x544b31}); Elt 3 (Pair 3 {Elt "decimals" 0x30; Elt "name" 0x54686520546f6b656e204e756d626572205468726565; Elt "symbol" 0x544b32})})))
Comment...
 p: Operator1 cannot transfer Bob's tokens
 => ./output/ContractFactory/FA2-nft-no_totsup/step_040_cont_0_params.py 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_040_cont_0_params.tz 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_040_cont_0_params.json 9
Executing transfer(sp.list([sp.set_type_expr(sp.record(from_ = sp.resolve(sp.test_account("Robert").address), txs = sp.list([sp.record(to_ = sp.resolve(sp.test_account("Operator1").address), token_id = 1, amount = 2)])), sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs")))]))...
 -> --- Expected failure in transaction --- Wrong condition: (((sp.sender == self.data.administrator) | (transfer.from_ == sp.sender)) | (self.data.operators.contains(sp.set_type_expr(sp.record(owner = transfer.from_, operator = sp.sender, token_id = tx.token_id), sp.TRecord(operator = sp.TAddress, owner = sp.TAddress, token_id = sp.TNat).layout(("owner", ("operator", "token_id")))))) : sp.TBool) (./FA2.py, line 435)
Message: 'FA2_NOT_OPERATOR'
 (./FA2.py, line 441)
Comment...
 p: Operator2 cannot transfer Alice's tokens
 => ./output/ContractFactory/FA2-nft-no_totsup/step_042_cont_0_params.py 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_042_cont_0_params.tz 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_042_cont_0_params.json 9
Executing transfer(sp.list([sp.set_type_expr(sp.record(from_ = sp.resolve(sp.test_account("Alice").address), txs = sp.list([sp.record(to_ = sp.resolve(sp.test_account("Robert").address), token_id = 1, amount = 2)])), sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs")))]))...
 -> --- Expected failure in transaction --- Wrong condition: (((sp.sender == self.data.administrator) | (transfer.from_ == sp.sender)) | (self.data.operators.contains(sp.set_type_expr(sp.record(owner = transfer.from_, operator = sp.sender, token_id = tx.token_id), sp.TRecord(operator = sp.TAddress, owner = sp.TAddress, token_id = sp.TNat).layout(("owner", ("operator", "token_id")))))) : sp.TBool) (./FA2.py, line 435)
Message: 'FA2_NOT_OPERATOR'
 (./FA2.py, line 441)
Comment...
 p: Alice can remove their operator
 => ./output/ContractFactory/FA2-nft-no_totsup/step_044_cont_0_params.py 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_044_cont_0_params.tz 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_044_cont_0_params.json 20
Executing update_operators(sp.list([variant('remove_operator', sp.set_type_expr(sp.record(owner = sp.resolve(sp.test_account("Alice").address), operator = sp.resolve(sp.test_account("Operator1").address), token_id = 0), sp.TRecord(operator = sp.TAddress, owner = sp.TAddress, token_id = sp.TNat).layout(("owner", ("operator", "token_id"))))), variant('remove_operator', sp.set_type_expr(sp.record(owner = sp.resolve(sp.test_account("Alice").address), operator = sp.resolve(sp.test_account("Operator1").address), token_id = 0), sp.TRecord(operator = sp.TAddress, owner = sp.TAddress, token_id = sp.TNat).layout(("owner", ("operator", "token_id")))))]))...
 -> (Pair (Pair "tz1hdQscorfqMzFqYxnrApuS5i6QSTuoAp3w" (Pair 4 {Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 0) 30; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 1) 10; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 2) 100; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 3) 200; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 0) 20; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 1) 40})) (Pair (Pair {Elt "" 0x68747470733a2f2f6578616d706c652e636f6d} {Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair "tz1Yy7DNgpD9Y34mW8jkYaXG4qfBqdSW72Gw" 2)) Unit}) (Pair False {Elt 0 (Pair 0 {Elt "" 0x68747470733a2f2f697066732e696f2f697066732f626166797265696173376b7a3272796b7475333461667177683536706c746d333275787365636178736f6f746b6c776c7371757735676e337074712f6d657461646174612e6a736f6e2f}); Elt 1 (Pair 1 {Elt "decimals" 0x32; Elt "name" 0x54686520546f6b656e205a65726f; Elt "symbol" 0x544b30}); Elt 2 (Pair 2 {Elt "decimals" 0x30; Elt "name" 0x546865205365636f6e6420546f6b656e; Elt "symbol" 0x544b31}); Elt 3 (Pair 3 {Elt "decimals" 0x30; Elt "name" 0x54686520546f6b656e204e756d626572205468726565; Elt "symbol" 0x544b32})})))
Comment...
 p: Operator1 cannot transfer Alice's tokens any more
 => ./output/ContractFactory/FA2-nft-no_totsup/step_046_cont_0_params.py 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_046_cont_0_params.tz 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_046_cont_0_params.json 9
Executing transfer(sp.list([sp.set_type_expr(sp.record(from_ = sp.resolve(sp.test_account("Alice").address), txs = sp.list([sp.record(to_ = sp.resolve(sp.test_account("Operator1").address), token_id = 1, amount = 2)])), sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs")))]))...
 -> --- Expected failure in transaction --- Wrong condition: (((sp.sender == self.data.administrator) | (transfer.from_ == sp.sender)) | (self.data.operators.contains(sp.set_type_expr(sp.record(owner = transfer.from_, operator = sp.sender, token_id = tx.token_id), sp.TRecord(operator = sp.TAddress, owner = sp.TAddress, token_id = sp.TNat).layout(("owner", ("operator", "token_id")))))) : sp.TBool) (./FA2.py, line 435)
Message: 'FA2_NOT_OPERATOR'
 (./FA2.py, line 441)
Comment...
 p: Bob can add Operator0.
 => ./output/ContractFactory/FA2-nft-no_totsup/step_048_cont_0_params.py 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_048_cont_0_params.tz 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_048_cont_0_params.json 20
Executing update_operators(sp.list([variant('add_operator', sp.set_type_expr(sp.record(owner = sp.resolve(sp.test_account("Robert").address), operator = sp.resolve(sp.test_account("Operator0").address), token_id = 0), sp.TRecord(operator = sp.TAddress, owner = sp.TAddress, token_id = sp.TNat).layout(("owner", ("operator", "token_id"))))), variant('add_operator', sp.set_type_expr(sp.record(owner = sp.resolve(sp.test_account("Robert").address), operator = sp.resolve(sp.test_account("Operator0").address), token_id = 1), sp.TRecord(operator = sp.TAddress, owner = sp.TAddress, token_id = sp.TNat).layout(("owner", ("operator", "token_id")))))]))...
 -> (Pair (Pair "tz1hdQscorfqMzFqYxnrApuS5i6QSTuoAp3w" (Pair 4 {Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 0) 30; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 1) 10; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 2) 100; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 3) 200; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 0) 20; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 1) 40})) (Pair (Pair {Elt "" 0x68747470733a2f2f6578616d706c652e636f6d} {Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" (Pair "tz1YwWQ4mN5bERtawS7md846BTZSTpTFAt6u" 0)) Unit; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" (Pair "tz1YwWQ4mN5bERtawS7md846BTZSTpTFAt6u" 1)) Unit; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair "tz1Yy7DNgpD9Y34mW8jkYaXG4qfBqdSW72Gw" 2)) Unit}) (Pair False {Elt 0 (Pair 0 {Elt "" 0x68747470733a2f2f697066732e696f2f697066732f626166797265696173376b7a3272796b7475333461667177683536706c746d333275787365636178736f6f746b6c776c7371757735676e337074712f6d657461646174612e6a736f6e2f}); Elt 1 (Pair 1 {Elt "decimals" 0x32; Elt "name" 0x54686520546f6b656e205a65726f; Elt "symbol" 0x544b30}); Elt 2 (Pair 2 {Elt "decimals" 0x30; Elt "name" 0x546865205365636f6e6420546f6b656e; Elt "symbol" 0x544b31}); Elt 3 (Pair 3 {Elt "decimals" 0x30; Elt "name" 0x54686520546f6b656e204e756d626572205468726565; Elt "symbol" 0x544b32})})))
Comment...
 p: Operator0 can transfer Bob's tokens '0' and '1'
 => ./output/ContractFactory/FA2-nft-no_totsup/step_050_cont_0_params.py 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_050_cont_0_params.tz 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_050_cont_0_params.json 16
Executing transfer(sp.list([sp.set_type_expr(sp.record(from_ = sp.resolve(sp.test_account("Robert").address), txs = sp.list([sp.record(to_ = sp.resolve(sp.test_account("Alice").address), token_id = 0, amount = 1)])), sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs"))), sp.set_type_expr(sp.record(from_ = sp.resolve(sp.test_account("Robert").address), txs = sp.list([sp.record(to_ = sp.resolve(sp.test_account("Alice").address), token_id = 1, amount = 1)])), sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs")))]))...
 -> (Pair (Pair "tz1hdQscorfqMzFqYxnrApuS5i6QSTuoAp3w" (Pair 4 {Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 0) 29; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 1) 9; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 2) 100; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 3) 200; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 0) 21; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 1) 41})) (Pair (Pair {Elt "" 0x68747470733a2f2f6578616d706c652e636f6d} {Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" (Pair "tz1YwWQ4mN5bERtawS7md846BTZSTpTFAt6u" 0)) Unit; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" (Pair "tz1YwWQ4mN5bERtawS7md846BTZSTpTFAt6u" 1)) Unit; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair "tz1Yy7DNgpD9Y34mW8jkYaXG4qfBqdSW72Gw" 2)) Unit}) (Pair False {Elt 0 (Pair 0 {Elt "" 0x68747470733a2f2f697066732e696f2f697066732f626166797265696173376b7a3272796b7475333461667177683536706c746d333275787365636178736f6f746b6c776c7371757735676e337074712f6d657461646174612e6a736f6e2f}); Elt 1 (Pair 1 {Elt "decimals" 0x32; Elt "name" 0x54686520546f6b656e205a65726f; Elt "symbol" 0x544b30}); Elt 2 (Pair 2 {Elt "decimals" 0x30; Elt "name" 0x546865205365636f6e6420546f6b656e; Elt "symbol" 0x544b31}); Elt 3 (Pair 3 {Elt "decimals" 0x30; Elt "name" 0x54686520546f6b656e204e756d626572205468726565; Elt "symbol" 0x544b32})})))
Comment...
 p: Bob cannot add Operator0 for Alice's tokens.
 => ./output/ContractFactory/FA2-nft-no_totsup/step_052_cont_0_params.py 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_052_cont_0_params.tz 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_052_cont_0_params.json 11
Executing update_operators(sp.list([variant('add_operator', sp.set_type_expr(sp.record(owner = sp.resolve(sp.test_account("Alice").address), operator = sp.resolve(sp.test_account("Operator0").address), token_id = 0), sp.TRecord(operator = sp.TAddress, owner = sp.TAddress, token_id = sp.TNat).layout(("owner", ("operator", "token_id")))))]))...
 -> --- Expected failure in transaction --- Wrong condition: ((add_operator.owner == sp.sender) | (sp.sender == self.data.administrator) : sp.TBool) (./FA2.py, line 519)
Message: 'FA2_NOT_ADMIN_OR_OPERATOR'
 (./FA2.py, line 518)
Comment...
 p: Alice can also add Operator0 for their tokens 0.
 => ./output/ContractFactory/FA2-nft-no_totsup/step_054_cont_0_params.py 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_054_cont_0_params.tz 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_054_cont_0_params.json 11
Executing update_operators(sp.list([variant('add_operator', sp.set_type_expr(sp.record(owner = sp.resolve(sp.test_account("Alice").address), operator = sp.resolve(sp.test_account("Operator0").address), token_id = 0), sp.TRecord(operator = sp.TAddress, owner = sp.TAddress, token_id = sp.TNat).layout(("owner", ("operator", "token_id")))))]))...
 -> (Pair (Pair "tz1hdQscorfqMzFqYxnrApuS5i6QSTuoAp3w" (Pair 4 {Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 0) 29; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 1) 9; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 2) 100; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 3) 200; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 0) 21; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 1) 41})) (Pair (Pair {Elt "" 0x68747470733a2f2f6578616d706c652e636f6d} {Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" (Pair "tz1YwWQ4mN5bERtawS7md846BTZSTpTFAt6u" 0)) Unit; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" (Pair "tz1YwWQ4mN5bERtawS7md846BTZSTpTFAt6u" 1)) Unit; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair "tz1YwWQ4mN5bERtawS7md846BTZSTpTFAt6u" 0)) Unit; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair "tz1Yy7DNgpD9Y34mW8jkYaXG4qfBqdSW72Gw" 2)) Unit}) (Pair False {Elt 0 (Pair 0 {Elt "" 0x68747470733a2f2f697066732e696f2f697066732f626166797265696173376b7a3272796b7475333461667177683536706c746d333275787365636178736f6f746b6c776c7371757735676e337074712f6d657461646174612e6a736f6e2f}); Elt 1 (Pair 1 {Elt "decimals" 0x32; Elt "name" 0x54686520546f6b656e205a65726f; Elt "symbol" 0x544b30}); Elt 2 (Pair 2 {Elt "decimals" 0x30; Elt "name" 0x546865205365636f6e6420546f6b656e; Elt "symbol" 0x544b31}); Elt 3 (Pair 3 {Elt "decimals" 0x30; Elt "name" 0x54686520546f6b656e204e756d626572205468726565; Elt "symbol" 0x544b32})})))
Comment...
 p: Operator0 can now transfer Bob's and Alice's 0-tokens.
 => ./output/ContractFactory/FA2-nft-no_totsup/step_056_cont_0_params.py 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_056_cont_0_params.tz 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_056_cont_0_params.json 16
Executing transfer(sp.list([sp.set_type_expr(sp.record(from_ = sp.resolve(sp.test_account("Robert").address), txs = sp.list([sp.record(to_ = sp.resolve(sp.test_account("Alice").address), token_id = 0, amount = 1)])), sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs"))), sp.set_type_expr(sp.record(from_ = sp.resolve(sp.test_account("Alice").address), txs = sp.list([sp.record(to_ = sp.resolve(sp.test_account("Robert").address), token_id = 0, amount = 1)])), sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs")))]))...
 -> (Pair (Pair "tz1hdQscorfqMzFqYxnrApuS5i6QSTuoAp3w" (Pair 4 {Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 0) 29; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 1) 9; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 2) 100; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 3) 200; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 0) 21; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 1) 41})) (Pair (Pair {Elt "" 0x68747470733a2f2f6578616d706c652e636f6d} {Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" (Pair "tz1YwWQ4mN5bERtawS7md846BTZSTpTFAt6u" 0)) Unit; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" (Pair "tz1YwWQ4mN5bERtawS7md846BTZSTpTFAt6u" 1)) Unit; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair "tz1YwWQ4mN5bERtawS7md846BTZSTpTFAt6u" 0)) Unit; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair "tz1Yy7DNgpD9Y34mW8jkYaXG4qfBqdSW72Gw" 2)) Unit}) (Pair False {Elt 0 (Pair 0 {Elt "" 0x68747470733a2f2f697066732e696f2f697066732f626166797265696173376b7a3272796b7475333461667177683536706c746d333275787365636178736f6f746b6c776c7371757735676e337074712f6d657461646174612e6a736f6e2f}); Elt 1 (Pair 1 {Elt "decimals" 0x32; Elt "name" 0x54686520546f6b656e205a65726f; Elt "symbol" 0x544b30}); Elt 2 (Pair 2 {Elt "decimals" 0x30; Elt "name" 0x546865205365636f6e6420546f6b656e; Elt "symbol" 0x544b31}); Elt 3 (Pair 3 {Elt "decimals" 0x30; Elt "name" 0x54686520546f6b656e204e756d626572205468726565; Elt "symbol" 0x544b32})})))
Comment...
 p: Bob adds Operator2 as second operator for 0-tokens.
 => ./output/ContractFactory/FA2-nft-no_totsup/step_058_cont_0_params.py 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_058_cont_0_params.tz 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_058_cont_0_params.json 11
Executing update_operators(sp.list([variant('add_operator', sp.set_type_expr(sp.record(owner = sp.resolve(sp.test_account("Robert").address), operator = sp.resolve(sp.test_account("Operator2").address), token_id = 0), sp.TRecord(operator = sp.TAddress, owner = sp.TAddress, token_id = sp.TNat).layout(("owner", ("operator", "token_id")))))]))...
 -> (Pair (Pair "tz1hdQscorfqMzFqYxnrApuS5i6QSTuoAp3w" (Pair 4 {Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 0) 29; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 1) 9; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 2) 100; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 3) 200; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 0) 21; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 1) 41})) (Pair (Pair {Elt "" 0x68747470733a2f2f6578616d706c652e636f6d} {Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" (Pair "tz1XJSgPn4RXytGaaitxWVrsT9EdgR2atrRd" 0)) Unit; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" (Pair "tz1YwWQ4mN5bERtawS7md846BTZSTpTFAt6u" 0)) Unit; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" (Pair "tz1YwWQ4mN5bERtawS7md846BTZSTpTFAt6u" 1)) Unit; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair "tz1YwWQ4mN5bERtawS7md846BTZSTpTFAt6u" 0)) Unit; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair "tz1Yy7DNgpD9Y34mW8jkYaXG4qfBqdSW72Gw" 2)) Unit}) (Pair False {Elt 0 (Pair 0 {Elt "" 0x68747470733a2f2f697066732e696f2f697066732f626166797265696173376b7a3272796b7475333461667177683536706c746d333275787365636178736f6f746b6c776c7371757735676e337074712f6d657461646174612e6a736f6e2f}); Elt 1 (Pair 1 {Elt "decimals" 0x32; Elt "name" 0x54686520546f6b656e205a65726f; Elt "symbol" 0x544b30}); Elt 2 (Pair 2 {Elt "decimals" 0x30; Elt "name" 0x546865205365636f6e6420546f6b656e; Elt "symbol" 0x544b31}); Elt 3 (Pair 3 {Elt "decimals" 0x30; Elt "name" 0x54686520546f6b656e204e756d626572205468726565; Elt "symbol" 0x544b32})})))
Comment...
 p: Operator0 and Operator2 can transfer Bob's 0-tokens.
 => ./output/ContractFactory/FA2-nft-no_totsup/step_060_cont_0_params.py 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_060_cont_0_params.tz 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_060_cont_0_params.json 9
Executing transfer(sp.list([sp.set_type_expr(sp.record(from_ = sp.resolve(sp.test_account("Robert").address), txs = sp.list([sp.record(to_ = sp.resolve(sp.test_account("Alice").address), token_id = 0, amount = 1)])), sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs")))]))...
 -> (Pair (Pair "tz1hdQscorfqMzFqYxnrApuS5i6QSTuoAp3w" (Pair 4 {Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 0) 28; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 1) 9; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 2) 100; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 3) 200; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 0) 22; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 1) 41})) (Pair (Pair {Elt "" 0x68747470733a2f2f6578616d706c652e636f6d} {Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" (Pair "tz1XJSgPn4RXytGaaitxWVrsT9EdgR2atrRd" 0)) Unit; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" (Pair "tz1YwWQ4mN5bERtawS7md846BTZSTpTFAt6u" 0)) Unit; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" (Pair "tz1YwWQ4mN5bERtawS7md846BTZSTpTFAt6u" 1)) Unit; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair "tz1YwWQ4mN5bERtawS7md846BTZSTpTFAt6u" 0)) Unit; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair "tz1Yy7DNgpD9Y34mW8jkYaXG4qfBqdSW72Gw" 2)) Unit}) (Pair False {Elt 0 (Pair 0 {Elt "" 0x68747470733a2f2f697066732e696f2f697066732f626166797265696173376b7a3272796b7475333461667177683536706c746d333275787365636178736f6f746b6c776c7371757735676e337074712f6d657461646174612e6a736f6e2f}); Elt 1 (Pair 1 {Elt "decimals" 0x32; Elt "name" 0x54686520546f6b656e205a65726f; Elt "symbol" 0x544b30}); Elt 2 (Pair 2 {Elt "decimals" 0x30; Elt "name" 0x546865205365636f6e6420546f6b656e; Elt "symbol" 0x544b31}); Elt 3 (Pair 3 {Elt "decimals" 0x30; Elt "name" 0x54686520546f6b656e204e756d626572205468726565; Elt "symbol" 0x544b32})})))
 => ./output/ContractFactory/FA2-nft-no_totsup/step_061_cont_0_params.py 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_061_cont_0_params.tz 1
 => ./output/ContractFactory/FA2-nft-no_totsup/step_061_cont_0_params.json 9
Executing transfer(sp.list([sp.set_type_expr(sp.record(from_ = sp.resolve(sp.test_account("Robert").address), txs = sp.list([sp.record(to_ = sp.resolve(sp.test_account("Alice").address), token_id = 0, amount = 1)])), sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs")))]))...
 -> (Pair (Pair "tz1hdQscorfqMzFqYxnrApuS5i6QSTuoAp3w" (Pair 4 {Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 0) 27; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 1) 9; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 2) 100; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" 3) 200; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 0) 23; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" 1) 41})) (Pair (Pair {Elt "" 0x68747470733a2f2f6578616d706c652e636f6d} {Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" (Pair "tz1XJSgPn4RXytGaaitxWVrsT9EdgR2atrRd" 0)) Unit; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" (Pair "tz1YwWQ4mN5bERtawS7md846BTZSTpTFAt6u" 0)) Unit; Elt (Pair "tz1Ns3YQJR6piMZ8GrD2iYu94Ybi1HFfNyBP" (Pair "tz1YwWQ4mN5bERtawS7md846BTZSTpTFAt6u" 1)) Unit; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair "tz1YwWQ4mN5bERtawS7md846BTZSTpTFAt6u" 0)) Unit; Elt (Pair "tz1WxrQuZ4CK1MBUa2GqUWK1yJ4J6EtG1Gwi" (Pair "tz1Yy7DNgpD9Y34mW8jkYaXG4qfBqdSW72Gw" 2)) Unit}) (Pair False {Elt 0 (Pair 0 {Elt "" 0x68747470733a2f2f697066732e696f2f697066732f626166797265696173376b7a3272796b7475333461667177683536706c746d333275787365636178736f6f746b6c776c7371757735676e337074712f6d657461646174612e6a736f6e2f}); Elt 1 (Pair 1 {Elt "decimals" 0x32; Elt "name" 0x54686520546f6b656e205a65726f; Elt "symbol" 0x544b30}); Elt 2 (Pair 2 {Elt "decimals" 0x30; Elt "name" 0x546865205365636f6e6420546f6b656e; Elt "symbol" 0x544b31}); Elt 3 (Pair 3 {Elt "decimals" 0x30; Elt "name" 0x54686520546f6b656e204e756d626572205468726565; Elt "symbol" 0x544b32})})))
Table Of Contents

 FA2 Contract Name: FA2-nft-no_totsup
# Accounts
# Initial Minting
# Transfers Alice -> Bob
# More Token Types
# Other Basic Permission Tests
## Bob cannot transfer Alice's tokens.
## Admin can transfer anything.
## Even Admin cannot transfer too much.
## Consumer Contract for Callback Calls.
# Balance-of.
# Operators
## Operator Accounts
 => ./output/ContractFactory/FA2-nft-no_totsup/log.html 2991
